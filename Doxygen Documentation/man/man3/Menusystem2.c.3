.TH "C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Menusystem2.c" 3 "Wed Oct 22 2014" "Version V1.1" "Yavin IV Death Star Tracker" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Menusystem2.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'Common\&.h'\fP
.br
\fC#include 'Serial\&.h'\fP
.br
\fC#include 'User_Interface\&.h'\fP
.br
\fC#include 'LCD\&.h'\fP
.br
\fC#include 'PanTilt\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBSubMenu\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_SER_MSG_LEN\fP   30"
.br
.ti -1c
.RI "#define \fBMAX_LCD_MSG_LEN\fP   20"
.br
.ti -1c
.RI "#define \fBMAX_NUM_OPTIONS\fP   5"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBSubMenu\fP \fBSubMenu\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBMenuLevel\fP { \fBROOT\fP, \fBSUB\fP, \fBFUNC\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBparseInput\fP (char input)"
.br
.RI "\fIparse the user input \fP"
.ti -1c
.RI "static int \fBparseNumeric\fP (char *number)"
.br
.RI "\fIparses user input string into a number \fP"
.ti -1c
.RI "static void \fBstateEntry\fP (void)"
.br
.RI "\fIPerforms default actions on first entering the state\&. \fP"
.ti -1c
.RI "void \fBinitialiseMenu\fP (void)"
.br
.RI "\fIInitialises the menu system\&. \fP"
.ti -1c
.RI "void \fBserviceMenu\fP (void)"
.br
.RI "\fIservices any user interface with the menu \fP"
.ti -1c
.RI "void \fBmenuISR\fP (void)"
.br
.RI "\fIISR function for the menu subsystem\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static \fBSubMenu\fP \fBMin\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBMax\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBAutoTrack\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBManTrack\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBAz\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBElev\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBRoot\fP"
.br
.ti -1c
.RI "static \fBMenuLevel\fP \fBlevel\fP = \fBROOT\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP * \fBtest\fP = &\fBRoot\fP"
.br
.ti -1c
.RI "static \fBSubMenu\fP \fBmenus\fP [3]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX_LCD_MSG_LEN   20"

.SS "#define MAX_NUM_OPTIONS   5"

.SS "#define MAX_SER_MSG_LEN   30"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBSubMenu\fP  \fBSubMenu\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBMenuLevel\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIROOT \fP\fP
.TP
\fB\fISUB \fP\fP
.TP
\fB\fIFUNC \fP\fP
.SH "Function Documentation"
.PP 
.SS "void initialiseMenu (void)"

.PP
Initialises the menu system\&. 
.PP
 Function: \fBinitialiseMenu(void)\fP
.PP
Include: \fBMenusystem\&.h\fP
.PP
Description: initialises the menu system so that it is fully operational
.PP
Arguments: None
.PP
Returns: None 
.SS "void menuISR (void)"

.PP
ISR function for the menu subsystem\&. 
.PP
 Function: \fBmenuISR(void)\fP
.PP
Include: \fBMenusystem\&.h\fP
.PP
Description: services any interrupts associated with the menu system
.PP
Arguments: None
.PP
Returns: None 
.SS "static void parseInput (charinput)\fC [static]\fP"

.PP
parse the user input 
.PP
 Function: \fBparseInput(char input)\fP
.PP
Include: \fBMenusystem\&.h\fP
.PP
Description: services any interrupts associated with the menu system
.PP
Arguments: None
.PP
Returns: None 
.SS "static int parseNumeric (char *number)\fC [static]\fP"

.PP
parses user input string into a number 
.PP
 Function: \fBparseNumeric(char *number)\fP
.PP
Include:
.PP
Description: Calls the function which matches the user input
.PP
Arguments: None
.PP
Returns: None 
.SS "void serviceMenu (void)"

.PP
services any user interface with the menu 
.PP
 Function: \fBserviceMenu(void)\fP
.PP
Include:
.PP
Description: Checks if the user has made any inputs to the system\&. If not the function simply returns\&. If they have then it services the inputs, displays the correct outputs and performs the specified actions
.PP
Arguments: None
.PP
Returns: None 
.SS "static void stateEntry (void)\fC [static]\fP"

.PP
Performs default actions on first entering the state\&. 
.PP
 Function: \fBstateEntry(void)\fP
.PP
Include:
.PP
Description:
.PP
Arguments: None
.PP
Returns: None 
.SH "Variable Documentation"
.PP 
.SS "\fBSubMenu\fP AutoTrack\fC [static]\fP"

.SS "\fBSubMenu\fP Az\fC [static]\fP"

.SS "\fBSubMenu\fP Elev\fC [static]\fP"

.SS "\fBMenuLevel\fP level = \fBROOT\fP\fC [static]\fP"

.SS "\fBSubMenu\fP ManTrack\fC [static]\fP"

.SS "\fBSubMenu\fP Max\fC [static]\fP"

.SS "\fBSubMenu\fP menus[3]\fC [static]\fP"

.SS "\fBSubMenu\fP Min\fC [static]\fP"

.SS "\fBSubMenu\fP Root\fC [static]\fP"

.SS "\fBSubMenu\fP* test = &\fBRoot\fP\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Yavin IV Death Star Tracker from the source code\&.
