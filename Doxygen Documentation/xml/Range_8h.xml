<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="Range_8h" kind="file">
    <compoundname>Range.h</compoundname>
    <includedby refid="Interrupts_8c" local="yes">C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Interrupts.c</includedby>
    <includedby refid="newmain_8c" local="yes">C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/newmain.c</includedby>
    <includedby refid="Tracking_8c" local="yes">C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Tracking.c</includedby>
    <invincdepgraph>
      <node id="410">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Tracking.c</label>
        <link refid="Tracking_8c"/>
      </node>
      <node id="408">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Interrupts.c</label>
        <link refid="Interrupts_8c"/>
      </node>
      <node id="407">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h</label>
        <link refid="Range.h"/>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/newmain.c</label>
        <link refid="newmain_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Range_8h_1acbdd28592e68851fc99aa81a3b917fc9" prot="public" static="no">
        <name>RANGE_INT</name>
        <initializer><ref refid="Common_8h_1a1673a1a80febeafd51f3f02508a0ea71" kindref="member">CCP1_INT</ref> | <ref refid="Common_8h_1af1b5f2499fdbb5b83800325b12a062cf" kindref="member">TMR1_INT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="Range_8h" kindref="compound">Range.h</ref> Author: Grant</para><para>Description: Contains the public interface for the ultrasonic module. This file contains all the external declarations, macros and global variables for using and Interfacing with the Range module.</para><para>Created on 15 September 2014, 11:24 AM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="17" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" bodystart="17" bodyend="-1"/>
        <referencedby refid="Interrupts_8c_1ac835f50b358d0d663df1b8b835f9bb87" compoundref="Interrupts_8c" startline="88" endline="107">lowISR</referencedby>
        <referencedby refid="Interrupts_8c_1ae1ef1358e10604d046f54fc0b93c514c" compoundref="Interrupts_8c" startline="122" endline="141">highISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Range_8h_1a4e591dd86c476b236ffdb3c26e266469" prot="public" static="no">
        <name>RANGE_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="33" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Range_8h_1a07a4c592815b5e6ae178f93a7764ceb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configureRange</definition>
        <argsstring>(void)</argsstring>
        <name>configureRange</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a07a4c592815b5e6ae178f93a7764ceb2" kindref="member">configureRange(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Configures the Range module</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="20" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="105" bodyend="139"/>
        <references refid="Range_8c_1a885e4c51dcc91fcae14dadc2d564f270" compoundref="Range_8c" startline="38">INIT_PIN</references>
        <references refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772">INTCONbits</references>
        <references refid="p18f4520_8h_1a00ea63e57cd6582e6e73158695e2b088">RCONbits</references>
        <references refid="Temp_8c_1afd08db2b1a6d6af19e39f10dc453332c" compoundref="Temp_8c" startline="104" endline="113">readTemp</references>
        <references refid="Range_8c_1ac7337ef2da4c9ab03257562ec33bbb8a" compoundref="Range_8c" startline="80" endline="92">configureAD</references>
        <references refid="Range_8c_1aa42da5a67cdb563f37b56c1674dd67bb" compoundref="Range_8c" startline="40">CCP1_INPT</references>
        <references refid="Range_8c_1a6e6430371976f713ccccb6372b19b810" compoundref="Range_8c" startline="39">INIT_TRIS</references>
        <referencedby refid="Range_8c_1a8606bd1052dde0e7c32eddad8699f4f4" compoundref="Range_8c" startline="259" endline="286">calibrateRange</referencedby>
        <referencedby refid="Range_8h_1aff3698f3a7b3b5963d8e6b305a165d71" compoundref="Range_8c" startline="317" endline="401">range</referencedby>
        <referencedby refid="Range_8h_1a5b063989d39d2958d2ecebc0106cb1da" compoundref="Range_8c" startline="449" endline="465">rangeUltrasonic</referencedby>
        <referencedby refid="Tracking_8h_1ac9b1c5bae39806310b74e2f69d9ee3b6" compoundref="Tracking_8c" startline="41" endline="45">configureTracking</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1ac7337ef2da4c9ab03257562ec33bbb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configureAD</definition>
        <argsstring>(void)</argsstring>
        <name>configureAD</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1ac7337ef2da4c9ab03257562ec33bbb8a" kindref="member">configureAD(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Configures the ADC, In ADCON1, we set right-justified mode, and select AN0 as the input channel. In ADCON0, we set a sample rate of Fosc/8, select AN0, and enable the ADC. Arguments: None</para><para>Returns: None</para><para><xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>Make absolutely sure this works on the minimal board, and with the temperature sensor, and pot and IR sensor </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="21" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="80" bodyend="92"/>
        <references refid="p18f4520_8h_1a09522caca1ee06372c915b773f6b5bdd">TRISA</references>
        <references refid="p18f4520_8h_1a5c6e5143ca62f650ce1dd607cda0970e">ADCON1</references>
        <references refid="p18f4520_8h_1a84d1543e4da7b93ba59cba345ae5c222">ADCON0</references>
        <referencedby refid="Range_8h_1a07a4c592815b5e6ae178f93a7764ceb2" compoundref="Range_8c" startline="105" endline="139">configureRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1aff3698f3a7b3b5963d8e6b305a165d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int range</definition>
        <argsstring>(void)</argsstring>
        <name>range</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1aff3698f3a7b3b5963d8e6b305a165d71" kindref="member">range(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Uses the IR and Ultrasonic sensors to find the range</para><para>Arguments: None</para><para>Returns: fused range as an unsigned int</para><para><xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>Implement the sampling rate somehow </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="22" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="317" bodyend="401"/>
        <references refid="Range_8c_1aff3698f3a7b3b5963d8e6b305a165d71" compoundref="Range_8c" startline="317" endline="401">range</references>
        <references refid="Range_8c_1a07a4c592815b5e6ae178f93a7764ceb2" compoundref="Range_8c" startline="105" endline="139">configureRange</references>
        <references refid="Range_8c_1a4571d632d0c84c18c4aefd1c7b63cb8a" compoundref="Range_8c" startline="152" endline="167">beginUS</references>
        <references refid="Range_8c_1a91b55894b9e6d74e4495ea610246c856" compoundref="Range_8c" startline="419" endline="433">rangeIR</references>
        <references refid="Range_8c_1af470fd0f0b96399b344f11783b4ef7f3" compoundref="Range_8c" startline="184" endline="211">rangeUS</references>
        <references refid="Range_8c_1af421fb22b292f4b39367c73817a26993" compoundref="Range_8c" startline="53">calibration_offset_US</references>
        <references refid="Range_8c_1a8976a8edd47f4f691d54e563d4e649b7" compoundref="Range_8c" startline="52">calibration_offset_IR</references>
        <references refid="Range_8c_1a3e5f92f759a1957263c83a507c449b39" compoundref="Range_8c" startline="55">current_target_state</references>
        <references refid="Common_8h_1a2db986326a654991cce9b1c2b1670677a1095d17ed354ef770b301c64f7b09262" compoundref="Common_8h" startline="101">CLOSE_RANGE</references>
        <references refid="Common_8h_1a2db986326a654991cce9b1c2b1670677a02f92f801598d94c6fd997546781a275" compoundref="Common_8h" startline="101">OUT_OF_IR</references>
        <references refid="Common_8h_1a4d6bb91285c504f7a5a882961cf405a9" compoundref="Common_8h" startline="127">DIV_2</references>
        <references refid="Common_8h_1a2db986326a654991cce9b1c2b1670677a4e09a3b8626706bec6e8b94f8e43007f" compoundref="Common_8h" startline="101">GOOD_TRACK</references>
        <references refid="Common_8h_1a2db986326a654991cce9b1c2b1670677a49a975d06b51d93badc62d5685898851" compoundref="Common_8h" startline="101">BAD_DIR</references>
        <references refid="Common_8h_1a2db986326a654991cce9b1c2b1670677aba1240809f7ca0c3eb4ee13d2abe47e2" compoundref="Common_8h" startline="101">NO_TARGET</references>
        <references refid="Range_8c_1ad3cf40ad92b220b5e39aa159caa45f65" compoundref="Range_8c" startline="49">lastRange</references>
        <referencedby refid="Range_8c_1af470fd0f0b96399b344f11783b4ef7f3" compoundref="Range_8c" startline="184" endline="211">rangeUS</referencedby>
        <referencedby refid="Range_8c_1a8606bd1052dde0e7c32eddad8699f4f4" compoundref="Range_8c" startline="259" endline="286">calibrateRange</referencedby>
        <referencedby refid="Range_8h_1aff3698f3a7b3b5963d8e6b305a165d71" compoundref="Range_8c" startline="317" endline="401">range</referencedby>
        <referencedby refid="Range_8c_1a91b55894b9e6d74e4495ea610246c856" compoundref="Range_8c" startline="419" endline="433">rangeIR</referencedby>
        <referencedby refid="Range_8h_1a87c8e64ddc596f3e6b72ee861f671168" compoundref="Range_8c" startline="533" endline="539">readTargetState</referencedby>
        <referencedby refid="Tracking_8h_1a4f0ebbcddf842d008fbfebb705374c30" compoundref="Tracking_8c" startline="145" endline="202">track</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a64e9d21d140ac54a306dab455b49adcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rangeISR</definition>
        <argsstring>(void)</argsstring>
        <name>rangeISR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a64e9d21d140ac54a306dab455b49adcf" kindref="member">rangeISR(void)</ref></para><para>Include: ultrasonic.h</para><para>Description: Called when an range related interrupt is fired, acts as the service routine for the rangefinding module.</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="23" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="225" bodyend="242"/>
        <references refid="Common_8h_1a1673a1a80febeafd51f3f02508a0ea71" compoundref="Common_8h" startline="151">CCP1_INT</references>
        <references refid="p18f4520_8h_1acf62977c2300a77c993cc9bde8f98124">CCPR1</references>
        <references refid="Range_8c_1a4b6dc56220469aa5e4180dad6d68335f" compoundref="Range_8c" startline="46">measuringUS</references>
        <references refid="Range_8c_1a885e4c51dcc91fcae14dadc2d564f270" compoundref="Range_8c" startline="38">INIT_PIN</references>
        <references refid="p18f4520_8h_1a0da258d430dd4e57d8f750549f9ee883">PIE1bits</references>
        <references refid="Common_8h_1af1b5f2499fdbb5b83800325b12a062cf" compoundref="Common_8h" startline="158">TMR1_INT</references>
        <references refid="p18f4520_8h_1ac4d6310cb479c743b217189b91114508">PIR1bits</references>
        <references refid="Common_8h_1ae8aa3ab3a23a388dab62ac86ee5e2545" compoundref="Common_8h" startline="165">CCP1_CLEAR</references>
        <referencedby refid="Interrupts_8c_1ac835f50b358d0d663df1b8b835f9bb87" compoundref="Interrupts_8c" startline="88" endline="107">lowISR</referencedby>
        <referencedby refid="Interrupts_8c_1ae1ef1358e10604d046f54fc0b93c514c" compoundref="Interrupts_8c" startline="122" endline="141">highISR</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1ae2fb7c6f16c048f7f3247b7b5a3d403a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calibrateRange</definition>
        <argsstring>(signed int distance)</argsstring>
        <name>calibrateRange</name>
        <param>
          <type>signed int</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a2c0a42fe463e1d8bd954fe3679aef5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>signed int</type>
        <definition>signed int rawRange</definition>
        <argsstring>(void)</argsstring>
        <name>rawRange</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a90ce8835c75e17b8e2d15eca3e6ae82f" kindref="member">rawRange(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Returns uncalibrated range without the calibration offset</para><para>Arguments: None</para><para>Returns: distance (in mm) as an unsigned int </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="25" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="299" bodyend="302"/>
        <references refid="Range_8c_1ad3cf40ad92b220b5e39aa159caa45f65" compoundref="Range_8c" startline="49">lastRange</references>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a3e5554f5a076ded63b937d50b7e5c9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Common_8h_1a2db986326a654991cce9b1c2b1670677" kindref="member">TargetState</ref></type>
        <definition>TargetState getTargetState</definition>
        <argsstring>(void)</argsstring>
        <name>getTargetState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a3e5554f5a076ded63b937d50b7e5c9db" kindref="member">getTargetState(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Returns the target state from the last range reading. E.g. Good track, or direction not quite correct as US returned, but IR didn&apos;t and was within IR range etc.</para><para>Arguments: None</para><para>Returns: the target state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="27" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="516" bodyend="519"/>
        <references refid="Range_8c_1a3e5f92f759a1957263c83a507c449b39" compoundref="Range_8c" startline="55">current_target_state</references>
        <referencedby refid="Range_8h_1a87c8e64ddc596f3e6b72ee861f671168" compoundref="Range_8c" startline="533" endline="539">readTargetState</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a87c8e64ddc596f3e6b72ee861f671168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Common_8h_1a2db986326a654991cce9b1c2b1670677" kindref="member">TargetState</ref></type>
        <definition>TargetState readTargetState</definition>
        <argsstring>(void)</argsstring>
        <name>readTargetState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a87c8e64ddc596f3e6b72ee861f671168" kindref="member">readTargetState(void)</ref></para><para>Include: <ref refid="Range_8h" kindref="compound">Range.h</ref></para><para>Description: Does the same thing as getTargetState, but actually performs a <ref refid="Range_8c_1aff3698f3a7b3b5963d8e6b305a165d71" kindref="member">range()</ref> read</para><para>Arguments: None</para><para>Returns: the target state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="28" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="533" bodyend="539"/>
        <references refid="Range_8c_1aff3698f3a7b3b5963d8e6b305a165d71" compoundref="Range_8c" startline="317" endline="401">range</references>
        <references refid="Range_8c_1a3e5554f5a076ded63b937d50b7e5c9db" compoundref="Range_8c" startline="516" endline="519">getTargetState</references>
        <referencedby refid="Tracking_8h_1ac80b505821d79e98e9108b12d12c5db9" compoundref="Tracking_8c" startline="62" endline="110">search</referencedby>
        <referencedby refid="Tracking_8h_1a4f0ebbcddf842d008fbfebb705374c30" compoundref="Tracking_8c" startline="145" endline="202">track</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a91b55894b9e6d74e4495ea610246c856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int rangeIR</definition>
        <argsstring>(void)</argsstring>
        <name>rangeIR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="30" column="1"/>
        <referencedby refid="newmain_8c_1a562b6fc99e2386f66e66353386d80212" compoundref="newmain_8c" startline="108" endline="127">transRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="Range_8h_1a5b063989d39d2958d2ecebc0106cb1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int rangeUltrasonic</definition>
        <argsstring>(void)</argsstring>
        <name>rangeUltrasonic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Range_8c_1a5b063989d39d2958d2ecebc0106cb1da" kindref="member">rangeUltrasonic(void)</ref></para><para>Include:</para><para>Description: performs an ultrasonic range reading. Pins:</para><para>Arguments: None</para><para>Returns: the average of the samples</para><para>todo remove this function? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h" line="31" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.c" bodystart="449" bodyend="465"/>
        <references refid="Range_8c_1a07a4c592815b5e6ae178f93a7764ceb2" compoundref="Range_8c" startline="105" endline="139">configureRange</references>
        <references refid="Range_8c_1a4571d632d0c84c18c4aefd1c7b63cb8a" compoundref="Range_8c" startline="152" endline="167">beginUS</references>
        <references refid="Range_8c_1af470fd0f0b96399b344f11783b4ef7f3" compoundref="Range_8c" startline="184" endline="211">rangeUS</references>
        <references refid="Range_8c_1a885e4c51dcc91fcae14dadc2d564f270" compoundref="Range_8c" startline="38">INIT_PIN</references>
        <referencedby refid="newmain_8c_1a562b6fc99e2386f66e66353386d80212" compoundref="newmain_8c" startline="108" endline="127">transRange</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="comment">//Ensure<sp/>that<sp/>there<sp/>is<sp/>only<sp/>1<sp/>inclusion<sp/>of<sp/>this<sp/>file<sp/>in<sp/>the<sp/>preprocessor<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RANGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//Ultrasonic<sp/>module<sp/>interrupt<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="Range_8h_1acbdd28592e68851fc99aa81a3b917fc9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANGE_INT<sp/>CCP1_INT<sp/>|<sp/>TMR1_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//External<sp/>declarations<sp/>of<sp/>the<sp/>public<sp/>access<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1a07a4c592815b5e6ae178f93a7764ceb2" kindref="member">configureRange</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1ac7337ef2da4c9ab03257562ec33bbb8a" kindref="member">configureAD</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1aff3698f3a7b3b5963d8e6b305a165d71" kindref="member">range</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1a64e9d21d140ac54a306dab455b49adcf" kindref="member">rangeISR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1ae2fb7c6f16c048f7f3247b7b5a3d403a" kindref="member">calibrateRange</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1a2c0a42fe463e1d8bd954fe3679aef5c2" kindref="member">rawRange</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="Common_8h_1a2db986326a654991cce9b1c2b1670677" kindref="member">TargetState</ref><sp/><ref refid="Range_8h_1a3e5554f5a076ded63b937d50b7e5c9db" kindref="member">getTargetState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="Common_8h_1a2db986326a654991cce9b1c2b1670677" kindref="member">TargetState</ref><sp/><ref refid="Range_8h_1a87c8e64ddc596f3e6b72ee861f671168" kindref="member">readTargetState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1a91b55894b9e6d74e4495ea610246c856" kindref="member">rangeIR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Range_8h_1a5b063989d39d2958d2ecebc0106cb1da" kindref="member">rangeUltrasonic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="Range_8h_1a4e591dd86c476b236ffdb3c26e266469" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANGE_H</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Range.h"/>
  </compounddef>
</doxygen>
