<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="LCD_8h" kind="file">
    <compoundname>LCD.h</compoundname>
    <includedby refid="Menusystem_8c" local="yes">Yavin4DefenceSystem/Code/Menusystem.c</includedby>
    <includedby refid="Menusystem2_8c" local="yes">Yavin4DefenceSystem/Code/Menusystem2.c</includedby>
    <invincdepgraph>
      <node id="419">
        <label>Yavin4DefenceSystem/Code/Menusystem.c</label>
        <link refid="Menusystem_8c"/>
      </node>
      <node id="418">
        <label>Yavin4DefenceSystem/Code/LCD.h</label>
        <link refid="LCD.h"/>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
      </node>
      <node id="420">
        <label>Yavin4DefenceSystem/Code/Menusystem2.c</label>
        <link refid="Menusystem2_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="LCD_8h_1a137b94e8638bc4b6a0740668aefe5a58" prot="public" static="no">
        <name>LCD_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="19" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="LCD_8h_1aca72620ac93e9ea1cca303ba51934e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdWriteString</definition>
        <argsstring>(char *string, char line)</argsstring>
        <name>lcdWriteString</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>char</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Include: <ref refid="LCD_8h" kindref="compound">LCD.h</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="LCD_8h" kindref="compound">LCD.h</ref> Author: Grant</para><para>Description: Contains the public interface for the LCD module.</para><para>Created on 17 September 2014, 9:01 PM</para><para><hruler/>
 Function: lcdWriteString(char *string, unsigned char line)</para><para>Description:</para><para>Arguments: string - line -</para><para>Returns: NoneFeed character string, and line (1 or 2) </para>        </detaileddescription>
        <inbodydescription>
<para>Also include information about which row </para>        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="15" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="LCD_8h_1a8b2a2dadc77b13c3a26fb69b26a5792e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdWriteChar</definition>
        <argsstring>(char byte, char line, char column)</argsstring>
        <name>lcdWriteChar</name>
        <param>
          <type>char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>char</type>
          <declname>line</declname>
        </param>
        <param>
          <type>char</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Feed character string, and line (1 or 2) </para>        </briefdescription>
        <detaileddescription>
<para>Feed character string, and line (1 or 2)</para><para><hruler/>
 Function: lcdWriteChar(unsigned char byte, unsigned char line, unsigned char column)</para><para>Include: <ref refid="LCD_8h" kindref="compound">LCD.h</ref></para><para>Description:</para><para>Arguments: byte - line - column -</para><para>Returns: NoneFeed character, line (1 or 2), and column(1-16) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="16" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="213" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="LCD_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdInit</definition>
        <argsstring>(void)</argsstring>
        <name>lcdInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Feed character, line (1 or 2), and column(1-16) </para>        </briefdescription>
        <detaileddescription>
<para>Feed character, line (1 or 2), and column(1-16)</para><para><hruler/>
 Function: <ref refid="LCD_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" kindref="member">lcdInit(void)</ref></para><para>Include: <ref refid="LCD_8h" kindref="compound">LCD.h</ref></para><para>Description: Initialises the LCD hardware so that data can be displayed on the LCD in local interface mode</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
<para>Set data lines to output</para><para>Set control lines low</para><para>8 bits, 2 lines, 5x7 dots, 0x38</para><para>Display on, cursor off, blinking off (Z, 0x0F)</para><para>Cursor moves right?, display not shift (Z, 0x04)</para><para>Clear display </para>        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="17" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="39" bodyend="61"/>
        <references refid="LCD__defs_8h_1afa3b04d2041fda644c1dc08754a269d2" compoundref="LCD__defs_8h" startline="27">LCD_DATA_LINE_DIR</references>
        <references refid="LCD__defs_8h_1a58d5d0ca08e231d06cb669b9c7b796bf" compoundref="LCD__defs_8h" startline="49">LCD_OUTPUT</references>
        <references refid="LCD__defs_8h_1ae112ce30f55dc77f42c171b99e3e88ed" compoundref="LCD__defs_8h" startline="35">LCD_RS_DIR</references>
        <references refid="LCD__defs_8h_1a2d4167285379b41058accba2fb2db3a4" compoundref="LCD__defs_8h" startline="51">LCD_PIN_OUTPUT</references>
        <references refid="LCD__defs_8h_1ab7232fa939651a37b3ecd6c680825ab1" compoundref="LCD__defs_8h" startline="36">LCD_RW_DIR</references>
        <references refid="LCD__defs_8h_1ac0cff66c1771fb318dcbfd286a1a0cb2" compoundref="LCD__defs_8h" startline="37">LCD_E_DIR</references>
        <references refid="LCD__defs_8h_1a6ec15b1e813d1f56d2eb644a127e5d49" compoundref="LCD__defs_8h" startline="32">LCD_E</references>
        <references refid="LCD__defs_8h_1ab1110764abf2ec7cb233abc6176b0680" compoundref="LCD__defs_8h" startline="43">LCD_CLKLOW</references>
        <references refid="LCD__defs_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="LCD__defs_8h" startline="30">LCD_RS</references>
        <references refid="LCD__defs_8h_1a486f39e96159ebb7b722f66b8c7f3c57" compoundref="LCD__defs_8h" startline="39">LCD_INS</references>
        <references refid="LCD__defs_8h_1a26089a10ddd59a0dc7283c19ccc02533" compoundref="LCD__defs_8h" startline="31">LCD_RW</references>
        <references refid="LCD__defs_8h_1ac83c798c669ca46b417ecc89c6ad37fe" compoundref="LCD__defs_8h" startline="41">LCD_WRITE</references>
        <references refid="LCD_8c_1a500de059df24a647c81d895c38625d6c" compoundref="LCD_8c" startline="153" endline="166">lcdWrite</references>
        <references refid="LCD__defs_8h_1a5416babd692b29e8695541bb23bdf90e" compoundref="LCD__defs_8h" startline="72">SETDISPFXN</references>
        <references refid="LCD__defs_8h_1a8555e3a291d3c788f49fe33f4799777a" compoundref="LCD__defs_8h" startline="74">DL_8BIT</references>
        <references refid="LCD__defs_8h_1a7b56c3a38d26d83e31b71677535eeb81" compoundref="LCD__defs_8h" startline="76">N_2LINE</references>
        <references refid="LCD__defs_8h_1a6ef0073fc4f776246778e3a91fdd9aff" compoundref="LCD__defs_8h" startline="77">F_5X7DOT</references>
        <references refid="LCD_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="LCD_8c" startline="128" endline="137">delay</references>
        <references refid="LCD__defs_8h_1a23f9a6bd742860ecdcb41c932ab8ebf1" compoundref="LCD__defs_8h" startline="60">DISPOPT</references>
        <references refid="LCD__defs_8h_1a22db0d26a986b2793fa8eb57e9e8777e" compoundref="LCD__defs_8h" startline="62">D_DISPON</references>
        <references refid="LCD__defs_8h_1a360299bea880deca900b567ba9fffb3a" compoundref="LCD__defs_8h" startline="64">C_CURSOFF</references>
        <references refid="LCD__defs_8h_1abf51d618f5bf1585e82c35bb5f569fe8" compoundref="LCD__defs_8h" startline="65">B_BLINKOFF</references>
        <references refid="LCD__defs_8h_1a2203e462025f076098257f34776b114e" compoundref="LCD__defs_8h" startline="55">SETENTRYMODE</references>
        <references refid="LCD__defs_8h_1a410d807596fe23832bdba561312fc538" compoundref="LCD__defs_8h" startline="56">ID_CURSL</references>
        <references refid="LCD__defs_8h_1a9141826d7f78e7c4bfe646ea4ab23e90" compoundref="LCD__defs_8h" startline="58">SH_DISPNSHIFT</references>
        <references refid="LCD__defs_8h_1a1284e7ac55dad081842451e7435c7978" compoundref="LCD__defs_8h" startline="53">DISPCLR</references>
        <referencedby refid="Menusystem_8h_1a94b96ccbb8f3c627c5d59189498a3c1b" compoundref="Menusystem_8c" startline="190" endline="196">initialiseMenu</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="comment">//Ensure<sp/>that<sp/>there<sp/>is<sp/>only<sp/>1<sp/>inclusion<sp/>of<sp/>this<sp/>file<sp/>in<sp/>the<sp/>preprocessor<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LCD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//External<sp/>declarations<sp/>of<sp/>public<sp/>access<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LCD_8h_1aca72620ac93e9ea1cca303ba51934e47" kindref="member">lcdWriteString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LCD_8h_1a8b2a2dadc77b13c3a26fb69b26a5792e" kindref="member">lcdWriteChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>column);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LCD_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" kindref="member">lcdInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="LCD_8h_1a137b94e8638bc4b6a0740668aefe5a58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h"/>
  </compounddef>
</doxygen>
