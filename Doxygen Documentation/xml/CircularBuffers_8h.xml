<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="CircularBuffers_8h" kind="file">
    <compoundname>CircularBuffers.h</compoundname>
    <includedby refid="Serial_8c" local="yes">Yavin4DefenceSystem/Code/Serial.c</includedby>
    <includedby refid="User__Interface_8c" local="yes">Yavin4DefenceSystem/Code/User_Interface.c</includedby>
    <invincdepgraph>
      <node id="338">
        <label>Yavin4DefenceSystem/Code/Serial.c</label>
        <link refid="Serial_8c"/>
      </node>
      <node id="339">
        <label>Yavin4DefenceSystem/Code/User_Interface.c</label>
        <link refid="User__Interface_8c"/>
      </node>
      <node id="337">
        <label>Yavin4DefenceSystem/Code/CircularBuffers.h</label>
        <link refid="CircularBuffers.h"/>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcircularBuffer" prot="public">circularBuffer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="CircularBuffers_8h_1ac70e6264441e929fe13460353eb275c8" prot="public" static="no">
        <name>incMod</name>
        <param><defname>ptr</defname></param>
        <initializer>if(ptr==<ref refid="CircularBuffers_8h_1a5a69f707d5405fe875b322c6bfbace46" kindref="member">BUFFERLENGTH</ref>-1) ptr = 0; else ptr++;</initializer>
        <briefdescription>
<para>Buffer related macro functionality. </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="CircularBuffers_8h" kindref="compound">CircularBuffers.h</ref> Author: Grant</para><para>Description: Contains Circular Buffer functionality and structure definitions. This allows Circular Buffers to be used in any file by simply including this header. Furthermore, circular buffer functionality can be altered on a program level.</para><para>Contains: -Definition of CircularBuffer type -Peek, pop, push and init functionality -Empty, full, queries</para><para>Created on 8 October 2014, 10:30 AM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="22" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" prot="public" static="no">
        <name>empty</name>
        <param><defname>buf</defname></param>
        <initializer>(buf.tail == buf.head)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="23" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="23" bodyend="-1"/>
        <referencedby refid="Serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" compoundref="Serial_8c" startline="92" endline="105">transmit</referencedby>
        <referencedby refid="Serial_8h_1a42f5165187634304f89709eebe7c9f8c" compoundref="Serial_8c" startline="138" endline="141">receiveEmpty</referencedby>
        <referencedby refid="Serial_8h_1af7757e126aed6e958b291076653e24f9" compoundref="Serial_8c" startline="221" endline="229">popEsc</referencedby>
        <referencedby refid="Serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" compoundref="Serial_8c" startline="246" endline="259">readString</referencedby>
        <referencedby refid="Serial_8h_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" compoundref="Serial_8c" startline="273" endline="276">transmitted</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
        <referencedby refid="User__Interface_8h_1a62fd5de2781acb67fe5133d79ae580cc" compoundref="User__Interface_8c" startline="166" endline="169">userEmpty</referencedby>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1a380cd5dd5680e22e1b6d839a57781661" prot="public" static="no">
        <name>full</name>
        <param><defname>buf</defname></param>
        <initializer>(buf.head == (buf.tail + 1) % <ref refid="CircularBuffers_8h_1a5a69f707d5405fe875b322c6bfbace46" kindref="member">BUFFERLENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="24" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" prot="public" static="no">
        <name>peek</name>
        <param><defname>buf</defname></param>
        <initializer>buf.data[buf.head]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="25" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="25" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6e41eb5b433439d82f67def509ade010" compoundref="Serial_8c" startline="155" endline="158">receivePeek</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
        <referencedby refid="User__Interface_8h_1a3d17c3d0eb62b407b6badfd343da5181" compoundref="User__Interface_8c" startline="201" endline="204">userPeek</referencedby>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" prot="public" static="no">
        <name>push</name>
        <param><defname>byte</defname></param>
        <param><defname>buf</defname></param>
        <initializer>buf.data[buf.tail] = byte; if(<ref refid="CircularBuffers_8h_1a380cd5dd5680e22e1b6d839a57781661" kindref="member">full</ref>(buf)) <ref refid="CircularBuffers_8h_1ac70e6264441e929fe13460353eb275c8" kindref="member">incMod</ref>(buf.head); <ref refid="CircularBuffers_8h_1ac70e6264441e929fe13460353eb275c8" kindref="member">incMod</ref>(buf.tail)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="27" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="Serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" compoundref="Serial_8c" startline="92" endline="105">transmit</referencedby>
        <referencedby refid="Serial_8h_1aabfd643e8a01ba453ff6a88164b9eff8" compoundref="Serial_8c" startline="118" endline="125">transChar</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
        <referencedby refid="User__Interface_8h_1a3c2574813b4d75b20d43aa67ec0af650" compoundref="User__Interface_8c" startline="60" endline="73">userISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" prot="public" static="no">
        <name>pop</name>
        <param><defname>buf</defname></param>
        <initializer>buf.data[buf.head]; if (!<ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(buf)) <ref refid="CircularBuffers_8h_1ac70e6264441e929fe13460353eb275c8" kindref="member">incMod</ref>(buf.head)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="28" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="Serial_8h_1abb74ccb0bd81e0e4779854c93851c804" compoundref="Serial_8c" startline="171" endline="175">receivePop</referencedby>
        <referencedby refid="Serial_8h_1af7757e126aed6e958b291076653e24f9" compoundref="Serial_8c" startline="221" endline="229">popEsc</referencedby>
        <referencedby refid="Serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" compoundref="Serial_8c" startline="246" endline="259">readString</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
        <referencedby refid="User__Interface_8h_1a3f61f7acd05df7af4bb136a5f98c3e54" compoundref="User__Interface_8c" startline="182" endline="187">userPop</referencedby>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1a526002aa17fac30d010d4d7315d5d81c" prot="public" static="no">
        <name>init</name>
        <param><defname>buf</defname></param>
        <initializer>buf.tail = 0; buf.head = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="29" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="Serial_8h_1ae2cdcda889fcfed4b6b851835bf2b538" compoundref="Serial_8c" startline="58" endline="77">configureSerial</referencedby>
        <referencedby refid="User__Interface_8h_1a58e473ed40d00e18bd61277428e4d36c" compoundref="User__Interface_8c" startline="86" endline="113">configUSER</referencedby>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1a5a69f707d5405fe875b322c6bfbace46" prot="public" static="no">
        <name>BUFFERLENGTH</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="32" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CircularBuffers_8h_1a6e3f4516c9290cae3eaa13d167d5b6fe" prot="public" static="no">
        <name>BUFFERS_H</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" line="56" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="comment">//Ensure<sp/>there<sp/>is<sp/>only<sp/>1<sp/>inclusion<sp/>of<sp/>this<sp/>file<sp/>in<sp/>the<sp/>preprocessor<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BUFFERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="CircularBuffers_8h_1ac70e6264441e929fe13460353eb275c8" refkind="member"><highlight class="preprocessor">#define<sp/>incMod(ptr)<sp/>if(ptr==BUFFERLENGTH-1)<sp/>ptr<sp/>=<sp/>0;<sp/>else<sp/>ptr++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>empty(buf)<sp/>(buf.tail<sp/>==<sp/>buf.head)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="CircularBuffers_8h_1a380cd5dd5680e22e1b6d839a57781661" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>full(buf)<sp/>(buf.head<sp/>==<sp/>(buf.tail<sp/>+<sp/>1)<sp/>%<sp/>BUFFERLENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>peek(buf)<sp/>buf.data[buf.head]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>push(byte,<sp/>buf)<sp/>buf.data[buf.tail]<sp/>=<sp/>byte;<sp/>if(full(buf))<sp/>incMod(buf.head);<sp/>incMod(buf.tail)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pop(buf)<sp/>buf.data[buf.head];<sp/>if<sp/>(!empty(buf))<sp/>incMod(buf.head)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="CircularBuffers_8h_1a526002aa17fac30d010d4d7315d5d81c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>init(buf)<sp/>buf.tail<sp/>=<sp/>0;<sp/>buf.head<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//NOTE:<sp/>The<sp/>BUFFERLENGTH<sp/>can<sp/>be<sp/>redefined<sp/>at<sp/>the<sp/>top<sp/>of<sp/>any<sp/>module<sp/>if<sp/>a<sp/>different<sp/>length<sp/>is<sp/>desired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="CircularBuffers_8h_1a5a69f707d5405fe875b322c6bfbace46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFERLENGTH<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structcircularBuffer" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51" refid="structcircularBuffer_1a47f7e6109597e5c1c227993c0ce5f560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structcircularBuffer_1a47f7e6109597e5c1c227993c0ce5f560" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="52" refid="structcircularBuffer_1af18a1d7542e277284c4794593b049258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structcircularBuffer_1af18a1d7542e277284c4794593b049258" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="53" refid="structcircularBuffer_1ad7b57ba90694482456be1fbab7de4aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[<ref refid="CircularBuffers_8h_1a5a69f707d5405fe875b322c6bfbace46" kindref="member">BUFFERLENGTH</ref>];</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="structcircularBuffer" kindref="compound">circularBuffer</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="CircularBuffers_8h_1a6e3f4516c9290cae3eaa13d167d5b6fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFERS_H<sp/>0</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/CircularBuffers.h"/>
  </compounddef>
</doxygen>
