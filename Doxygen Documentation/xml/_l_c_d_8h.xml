<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_l_c_d_8h" kind="file">
    <compoundname>LCD.h</compoundname>
    <includedby refid="_l_c_d_8c" local="yes">C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c</includedby>
    <includedby refid="_menusystem2_8c" local="yes">C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Menusystem2.c</includedby>
    <invincdepgraph>
      <node id="309">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c</label>
        <link refid="_l_c_d_8c"/>
      </node>
      <node id="308">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h</label>
        <link refid="LCD.h"/>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Menusystem2.c</label>
        <link refid="_menusystem2_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_l_c_d_8h_1a137b94e8638bc4b6a0740668aefe5a58" prot="public" static="no">
        <name>LCD_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="23" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_l_c_d_8h_1a70a8f1041fdd13688a8f8e9fd897ccda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdWriteString</definition>
        <argsstring>(char *string, unsigned char line)</argsstring>
        <name>lcdWriteString</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Feed character string, and line (1 or 2) </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="_l_c_d_8h" kindref="compound">LCD.h</ref> Author: Grant</para><para>Description: Contains the public interface for the LCD module.</para><para>Created on 17 September 2014, 9:01 PM</para><para><hruler/>
 Function: <ref refid="_l_c_d_8c_1a70a8f1041fdd13688a8f8e9fd897ccda" kindref="member">lcdWriteString(char *string, unsigned char line)</ref></para><para>Include: <ref refid="_l_c_d_8h" kindref="compound">LCD.h</ref></para><para>Description:</para><para>Arguments: string - line -</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="15" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="172" bodyend="181"/>
        <references refid="_l_c_d__defs_8h_1a4c0102b3d63c7bd2d59a424ca3815ad1" compoundref="_l_c_d__defs_8h" startline="86">LINE1</references>
        <references refid="_l_c_d__defs_8h_1a259e96afd23afb9e2fd9e97d5e07193c" compoundref="_l_c_d__defs_8h" startline="87">LINE2</references>
        <references refid="_l_c_d__defs_8h_1ac508ef39f3ee20e7416e9258c1e5fb42" compoundref="_l_c_d__defs_8h" startline="89">LINESTART</references>
        <references refid="_l_c_d__defs_8h_1aaa7c97861ef6e1dea96e036b27db80c2" compoundref="_l_c_d__defs_8h" startline="90">LINEEND</references>
        <references refid="_l_c_d_8c_1a500de059df24a647c81d895c38625d6c" compoundref="_l_c_d_8c" startline="143" endline="155">lcdWrite</references>
        <references refid="_l_c_d__defs_8h_1ae82100451f137cfe99e0038df8553141" compoundref="_l_c_d__defs_8h" startline="80">SETDDRAMADD</references>
        <references refid="_l_c_d__defs_8h_1a486f39e96159ebb7b722f66b8c7f3c57" compoundref="_l_c_d__defs_8h" startline="39">LCD_INS</references>
        <references refid="_l_c_d__defs_8h_1a25e9d818788f36ed74d7c4579f87f2a6" compoundref="_l_c_d__defs_8h" startline="40">LCD_DATA</references>
        <references refid="_l_c_d_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="_l_c_d_8c" startline="122" endline="127">delay</references>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_8h_1a69bb3d698d74da5ea85d8a455dbb3b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdWriteChar</definition>
        <argsstring>(unsigned char byte, unsigned char line, unsigned char column)</argsstring>
        <name>lcdWriteChar</name>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Feed character string, and line (1 or 2) </para>        </briefdescription>
        <detaileddescription>
<para>Feed character string, and line (1 or 2)</para><para><hruler/>
 Function: <ref refid="_l_c_d_8h_1a69bb3d698d74da5ea85d8a455dbb3b28" kindref="member">lcdWriteChar(unsigned char byte, unsigned char line, unsigned char column)</ref></para><para>Include: <ref refid="_l_c_d_8h" kindref="compound">LCD.h</ref></para><para>Description:</para><para>Arguments: byte - line - column -</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="16" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="199" bodyend="206"/>
        <references refid="_l_c_d__defs_8h_1a4c0102b3d63c7bd2d59a424ca3815ad1" compoundref="_l_c_d__defs_8h" startline="86">LINE1</references>
        <references refid="_l_c_d__defs_8h_1a259e96afd23afb9e2fd9e97d5e07193c" compoundref="_l_c_d__defs_8h" startline="87">LINE2</references>
        <references refid="_l_c_d_8c_1a500de059df24a647c81d895c38625d6c" compoundref="_l_c_d_8c" startline="143" endline="155">lcdWrite</references>
        <references refid="_l_c_d__defs_8h_1ae82100451f137cfe99e0038df8553141" compoundref="_l_c_d__defs_8h" startline="80">SETDDRAMADD</references>
        <references refid="_l_c_d__defs_8h_1a486f39e96159ebb7b722f66b8c7f3c57" compoundref="_l_c_d__defs_8h" startline="39">LCD_INS</references>
        <references refid="_l_c_d__defs_8h_1a25e9d818788f36ed74d7c4579f87f2a6" compoundref="_l_c_d__defs_8h" startline="40">LCD_DATA</references>
        <references refid="_l_c_d_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="_l_c_d_8c" startline="122" endline="127">delay</references>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdInit</definition>
        <argsstring>(void)</argsstring>
        <name>lcdInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Feed character, line (1 or 2), and column(1-16) </para>        </briefdescription>
        <detaileddescription>
<para>Feed character, line (1 or 2), and column(1-16)</para><para><hruler/>
 File: <ref refid="_user___interface_8c" kindref="compound">User_Interface.c</ref> Author:</para><para>Description: Contains all the interface to the LCD hardware</para><para>Duties: -Interfaces with and controls the LCD -Displays data on the LCD</para><para>Created on 15 September 2014, 1:21 PM</para><para><hruler/>
 Function: <ref refid="_l_c_d_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" kindref="member">lcdInit(void)</ref></para><para>Include: <ref refid="_l_c_d_8h" kindref="compound">LCD.h</ref></para><para>Description: Initialises the LCD hardware so that data can be displayed on the LCD in local interface mode</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
<para>Set data lines to output</para><para>Set control lines low</para><para>8 bits, 2 lines, 5x7 dots, 0x38</para><para>Display on, cursor off, blinking on (Z, 0x0F)</para><para>Cursor moves right?, display not shift (Z, 0x04)</para><para>Clear display </para>        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="17" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="33" bodyend="55"/>
        <references refid="_l_c_d_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="_l_c_d_8c" startline="122" endline="127">delay</references>
        <references refid="_l_c_d__defs_8h_1afa3b04d2041fda644c1dc08754a269d2" compoundref="_l_c_d__defs_8h" startline="27">LCD_DATA_LINE_DIR</references>
        <references refid="_l_c_d__defs_8h_1a58d5d0ca08e231d06cb669b9c7b796bf" compoundref="_l_c_d__defs_8h" startline="49">LCD_OUTPUT</references>
        <references refid="_l_c_d__defs_8h_1ae112ce30f55dc77f42c171b99e3e88ed" compoundref="_l_c_d__defs_8h" startline="35">LCD_RS_DIR</references>
        <references refid="_l_c_d__defs_8h_1a2d4167285379b41058accba2fb2db3a4" compoundref="_l_c_d__defs_8h" startline="51">LCD_PIN_OUTPUT</references>
        <references refid="_l_c_d__defs_8h_1ab7232fa939651a37b3ecd6c680825ab1" compoundref="_l_c_d__defs_8h" startline="36">LCD_RW_DIR</references>
        <references refid="_l_c_d__defs_8h_1ac0cff66c1771fb318dcbfd286a1a0cb2" compoundref="_l_c_d__defs_8h" startline="37">LCD_E_DIR</references>
        <references refid="_l_c_d__defs_8h_1a6ec15b1e813d1f56d2eb644a127e5d49" compoundref="_l_c_d__defs_8h" startline="32">LCD_E</references>
        <references refid="_l_c_d__defs_8h_1ab1110764abf2ec7cb233abc6176b0680" compoundref="_l_c_d__defs_8h" startline="43">LCD_CLKLOW</references>
        <references refid="_l_c_d__defs_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="_l_c_d__defs_8h" startline="30">LCD_RS</references>
        <references refid="_l_c_d__defs_8h_1a486f39e96159ebb7b722f66b8c7f3c57" compoundref="_l_c_d__defs_8h" startline="39">LCD_INS</references>
        <references refid="_l_c_d__defs_8h_1a26089a10ddd59a0dc7283c19ccc02533" compoundref="_l_c_d__defs_8h" startline="31">LCD_RW</references>
        <references refid="_l_c_d__defs_8h_1ac83c798c669ca46b417ecc89c6ad37fe" compoundref="_l_c_d__defs_8h" startline="41">LCD_WRITE</references>
        <references refid="_l_c_d_8c_1a500de059df24a647c81d895c38625d6c" compoundref="_l_c_d_8c" startline="143" endline="155">lcdWrite</references>
        <references refid="_l_c_d__defs_8h_1a5416babd692b29e8695541bb23bdf90e" compoundref="_l_c_d__defs_8h" startline="72">SETDISPFXN</references>
        <references refid="_l_c_d__defs_8h_1a8555e3a291d3c788f49fe33f4799777a" compoundref="_l_c_d__defs_8h" startline="74">DL_8BIT</references>
        <references refid="_l_c_d__defs_8h_1a7b56c3a38d26d83e31b71677535eeb81" compoundref="_l_c_d__defs_8h" startline="76">N_2LINE</references>
        <references refid="_l_c_d__defs_8h_1a6ef0073fc4f776246778e3a91fdd9aff" compoundref="_l_c_d__defs_8h" startline="77">F_5X7DOT</references>
        <references refid="_l_c_d__defs_8h_1a23f9a6bd742860ecdcb41c932ab8ebf1" compoundref="_l_c_d__defs_8h" startline="60">DISPOPT</references>
        <references refid="_l_c_d__defs_8h_1a22db0d26a986b2793fa8eb57e9e8777e" compoundref="_l_c_d__defs_8h" startline="62">D_DISPON</references>
        <references refid="_l_c_d__defs_8h_1a360299bea880deca900b567ba9fffb3a" compoundref="_l_c_d__defs_8h" startline="64">C_CURSOFF</references>
        <references refid="_l_c_d__defs_8h_1a4b81e13dfe5251ca0ccf7a559067d954" compoundref="_l_c_d__defs_8h" startline="66">B_BLINKON</references>
        <references refid="_l_c_d__defs_8h_1a2203e462025f076098257f34776b114e" compoundref="_l_c_d__defs_8h" startline="55">SETENTRYMODE</references>
        <references refid="_l_c_d__defs_8h_1a410d807596fe23832bdba561312fc538" compoundref="_l_c_d__defs_8h" startline="56">ID_CURSL</references>
        <references refid="_l_c_d__defs_8h_1a9141826d7f78e7c4bfe646ea4ab23e90" compoundref="_l_c_d__defs_8h" startline="58">SH_DISPNSHIFT</references>
        <references refid="_l_c_d__defs_8h_1a1284e7ac55dad081842451e7435c7978" compoundref="_l_c_d__defs_8h" startline="53">DISPCLR</references>
        <referencedby refid="_menusystem_8h_1a94b96ccbb8f3c627c5d59189498a3c1b" compoundref="_menusystem_8c" startline="148" endline="153">initialiseMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_8h_1a6d7066138d22070be0234d8b113cf776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delay</definition>
        <argsstring>(unsigned int t)</argsstring>
        <name>delay</name>
        <param>
          <type>unsigned int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Include: </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: delay(void)</para><para>Description:</para><para>Arguments: t -</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="19" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="122" bodyend="127"/>
        <referencedby refid="_l_c_d_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" compoundref="_l_c_d_8c" startline="33" endline="55">lcdInit</referencedby>
        <referencedby refid="_l_c_d_8h_1a9f693f2e175a1192aebfeb586ed0fd6f" compoundref="_l_c_d_8c" startline="70" endline="107">lcdBusy</referencedby>
        <referencedby refid="_l_c_d_8h_1a500de059df24a647c81d895c38625d6c" compoundref="_l_c_d_8c" startline="143" endline="155">lcdWrite</referencedby>
        <referencedby refid="_l_c_d_8h_1a70a8f1041fdd13688a8f8e9fd897ccda" compoundref="_l_c_d_8c" startline="172" endline="181">lcdWriteString</referencedby>
        <referencedby refid="_l_c_d_8h_1a69bb3d698d74da5ea85d8a455dbb3b28" compoundref="_l_c_d_8c" startline="199" endline="206">lcdWriteChar</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_8h_1a9f693f2e175a1192aebfeb586ed0fd6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char lcdBusy</definition>
        <argsstring>(void)</argsstring>
        <name>lcdBusy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Include: </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_l_c_d_8c_1a9f693f2e175a1192aebfeb586ed0fd6f" kindref="member">lcdBusy(void)</ref></para><para>Description:</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
<para>Set data lines to input</para><para>Set the enable low, ensure clock signal is low</para><para>Set RW to read read from LCD</para><para>Set the register select to low for instruction</para><para>Set the enable high, ensure clock signal is high to allow data transmission</para><para>Set control lines to output</para><para>Set data lines to output</para><para>Set enable low to allow data to flow through</para><para>Set control lines to output</para><para>Set data lines to output</para><para>Set enable low to allow data to flow through </para>        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="20" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="70" bodyend="107"/>
        <references refid="_l_c_d__defs_8h_1ae112ce30f55dc77f42c171b99e3e88ed" compoundref="_l_c_d__defs_8h" startline="35">LCD_RS_DIR</references>
        <references refid="_l_c_d__defs_8h_1a2d4167285379b41058accba2fb2db3a4" compoundref="_l_c_d__defs_8h" startline="51">LCD_PIN_OUTPUT</references>
        <references refid="_l_c_d__defs_8h_1ab7232fa939651a37b3ecd6c680825ab1" compoundref="_l_c_d__defs_8h" startline="36">LCD_RW_DIR</references>
        <references refid="_l_c_d__defs_8h_1ac0cff66c1771fb318dcbfd286a1a0cb2" compoundref="_l_c_d__defs_8h" startline="37">LCD_E_DIR</references>
        <references refid="_l_c_d__defs_8h_1afa3b04d2041fda644c1dc08754a269d2" compoundref="_l_c_d__defs_8h" startline="27">LCD_DATA_LINE_DIR</references>
        <references refid="_l_c_d__defs_8h_1ae20812d3d385d3b8ce9aec04c15931c0" compoundref="_l_c_d__defs_8h" startline="48">LCD_INPUT</references>
        <references refid="_l_c_d__defs_8h_1a6ec15b1e813d1f56d2eb644a127e5d49" compoundref="_l_c_d__defs_8h" startline="32">LCD_E</references>
        <references refid="_l_c_d__defs_8h_1ab1110764abf2ec7cb233abc6176b0680" compoundref="_l_c_d__defs_8h" startline="43">LCD_CLKLOW</references>
        <references refid="_l_c_d__defs_8h_1a26089a10ddd59a0dc7283c19ccc02533" compoundref="_l_c_d__defs_8h" startline="31">LCD_RW</references>
        <references refid="_l_c_d__defs_8h_1ad543004401896d9736084fcd833b7fd6" compoundref="_l_c_d__defs_8h" startline="42">LCD_READ</references>
        <references refid="_l_c_d__defs_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="_l_c_d__defs_8h" startline="30">LCD_RS</references>
        <references refid="_l_c_d__defs_8h_1a486f39e96159ebb7b722f66b8c7f3c57" compoundref="_l_c_d__defs_8h" startline="39">LCD_INS</references>
        <references refid="_l_c_d__defs_8h_1a5d6929a4edefd6f446dedd2d18b89209" compoundref="_l_c_d__defs_8h" startline="44">LCD_CLKHGH</references>
        <references refid="_l_c_d_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="_l_c_d_8c" startline="122" endline="127">delay</references>
        <references refid="_l_c_d__defs_8h_1abd65075e01c7413419581aedee5bcc24" compoundref="_l_c_d__defs_8h" startline="15">LCD_D7</references>
        <references refid="_l_c_d__defs_8h_1a8a0934554a2d1a99cc7a0bcb2507bde9" compoundref="_l_c_d__defs_8h" startline="84">BF_BUSY</references>
        <references refid="_l_c_d__defs_8h_1a58d5d0ca08e231d06cb669b9c7b796bf" compoundref="_l_c_d__defs_8h" startline="49">LCD_OUTPUT</references>
        <referencedby refid="_l_c_d_8h_1a500de059df24a647c81d895c38625d6c" compoundref="_l_c_d_8c" startline="143" endline="155">lcdWrite</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_8h_1a500de059df24a647c81d895c38625d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdWrite</definition>
        <argsstring>(unsigned char byte, unsigned char mode)</argsstring>
        <name>lcdWrite</name>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Include: <ref refid="_l_c_d_8h" kindref="compound">LCD.h</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_l_c_d_8c_1a500de059df24a647c81d895c38625d6c" kindref="member">lcdWrite(unsigned char byte, unsigned char mode)</ref></para><para>Description:</para><para>Arguments: byte - mode -</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
<para>Set data lines to output</para><para>Write data to data lines</para><para>Set clock high</para><para>Set clock low </para>        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h" line="21" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.c" bodystart="143" bodyend="155"/>
        <references refid="_l_c_d_8c_1a9f693f2e175a1192aebfeb586ed0fd6f" compoundref="_l_c_d_8c" startline="70" endline="107">lcdBusy</references>
        <references refid="_l_c_d__defs_8h_1afa3b04d2041fda644c1dc08754a269d2" compoundref="_l_c_d__defs_8h" startline="27">LCD_DATA_LINE_DIR</references>
        <references refid="_l_c_d__defs_8h_1a58d5d0ca08e231d06cb669b9c7b796bf" compoundref="_l_c_d__defs_8h" startline="49">LCD_OUTPUT</references>
        <references refid="_l_c_d__defs_8h_1a26089a10ddd59a0dc7283c19ccc02533" compoundref="_l_c_d__defs_8h" startline="31">LCD_RW</references>
        <references refid="_l_c_d__defs_8h_1ac83c798c669ca46b417ecc89c6ad37fe" compoundref="_l_c_d__defs_8h" startline="41">LCD_WRITE</references>
        <references refid="_l_c_d__defs_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="_l_c_d__defs_8h" startline="30">LCD_RS</references>
        <references refid="_l_c_d__defs_8h_1a5a1e7e315586945fe0fbf4989ee40afc" compoundref="_l_c_d__defs_8h" startline="26">LCD_DATA_LINE</references>
        <references refid="_l_c_d_8c_1a6d7066138d22070be0234d8b113cf776" compoundref="_l_c_d_8c" startline="122" endline="127">delay</references>
        <references refid="_l_c_d__defs_8h_1a6ec15b1e813d1f56d2eb644a127e5d49" compoundref="_l_c_d__defs_8h" startline="32">LCD_E</references>
        <references refid="_l_c_d__defs_8h_1a5d6929a4edefd6f446dedd2d18b89209" compoundref="_l_c_d__defs_8h" startline="44">LCD_CLKHGH</references>
        <references refid="_l_c_d__defs_8h_1ab1110764abf2ec7cb233abc6176b0680" compoundref="_l_c_d__defs_8h" startline="43">LCD_CLKLOW</references>
        <referencedby refid="_l_c_d_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" compoundref="_l_c_d_8c" startline="33" endline="55">lcdInit</referencedby>
        <referencedby refid="_l_c_d_8h_1a70a8f1041fdd13688a8f8e9fd897ccda" compoundref="_l_c_d_8c" startline="172" endline="181">lcdWriteString</referencedby>
        <referencedby refid="_l_c_d_8h_1a69bb3d698d74da5ea85d8a455dbb3b28" compoundref="_l_c_d_8c" startline="199" endline="206">lcdWriteChar</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="comment">//Ensure<sp/>that<sp/>there<sp/>is<sp/>only<sp/>1<sp/>inclusion<sp/>of<sp/>this<sp/>file<sp/>in<sp/>the<sp/>preprocessor<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LCD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//External<sp/>declarations<sp/>of<sp/>public<sp/>access<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1a70a8f1041fdd13688a8f8e9fd897ccda" kindref="member">lcdWriteString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1a69bb3d698d74da5ea85d8a455dbb3b28" kindref="member">lcdWriteChar</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>column);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1aecaa9ab68490a0b8dedd20d200d5d0ef" kindref="member">lcdInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1a6d7066138d22070be0234d8b113cf776" kindref="member">delay</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1a9f693f2e175a1192aebfeb586ed0fd6f" kindref="member">lcdBusy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>busy<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_8h_1a500de059df24a647c81d895c38625d6c" kindref="member">lcdWrite</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_l_c_d_8h_1a137b94e8638bc4b6a0740668aefe5a58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/LCD.h"/>
  </compounddef>
</doxygen>
