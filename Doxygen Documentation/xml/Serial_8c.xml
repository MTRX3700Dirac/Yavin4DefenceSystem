<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="Serial_8c" kind="file">
    <compoundname>Serial.c</compoundname>
    <includes refid="Common_8h" local="yes">Common.h</includes>
    <includes refid="usart_8h" local="no">usart.h</includes>
    <includes refid="CircularBuffers_8h" local="yes">CircularBuffers.h</includes>
    <incdepgraph>
      <node id="559">
        <label>stdlib.h</label>
      </node>
      <node id="564">
        <label>adc.h</label>
      </node>
      <node id="557">
        <label>Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
      </node>
      <node id="556">
        <label>Yavin4DefenceSystem/Code/Serial.c</label>
        <link refid="Serial.c"/>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
      </node>
      <node id="567">
        <label>pconfig.h</label>
      </node>
      <node id="561">
        <label>string.h</label>
      </node>
      <node id="563">
        <label>timers.h</label>
      </node>
      <node id="568">
        <label>compare.h</label>
      </node>
      <node id="565">
        <label>capture.h</label>
      </node>
      <node id="560">
        <label>math.h</label>
      </node>
      <node id="566">
        <label>usart.h</label>
        <link refid="usart_8h"/>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="562">
        <label>p18f4520.h</label>
        <link refid="p18f4520_8h"/>
      </node>
      <node id="558">
        <label>stdio.h</label>
      </node>
      <node id="569">
        <label>CircularBuffers.h</label>
        <link refid="CircularBuffers_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Serial_8c_1ae75715981e20452ec65e09240954c901" prot="public" static="no">
        <name>TX_INT_CLEAR</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a045c6555e7e82fcf68e608d4404fb9ed" kindref="member">PIR1bits.TXIF</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="newmain_8c" kindref="compound">newmain.c</ref> Author: Grant</para><para>Description: Contains the functionality for the Serial module. All variables and settings concerning the serial module, such as the receive and transmit circular buffers are private to this module. The interface functions allow all valid access to the module.</para><para>Duties: -Stores an received characters in the received buffer -Stores any characters to be transmitted -Transmits anything in transmit buffer via interrupts -Accessor functions for using and querying buffers</para><para>Functions:</para><para>Created on 7 September 2014, 4:12 PM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="27" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="27" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a9607804df44b42159397aeee01326b93" prot="public" static="no">
        <name>RC_INT_CLEAR</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a8ff1127552738fc483a7e1887045e8d2" kindref="member">PIR1bits.RCIF</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="28" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="28" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1aed05378c71b5932db9fe75240763fcec" prot="public" static="no">
        <name>TX_INT_ENABLE</name>
        <param></param>
        <initializer><ref refid="Serial_8c_1ae75715981e20452ec65e09240954c901" kindref="member">TX_INT_CLEAR</ref>(); <ref refid="p18f4520_8h_1ae7b3b4752a0a4b6c084f1599ea98e724" kindref="member">PIE1bits.TXIE</ref> = 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="29" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="29" bodyend="-1"/>
        <referencedby refid="Serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" compoundref="Serial_8c" startline="92" endline="105">transmit</referencedby>
        <referencedby refid="Serial_8h_1aabfd643e8a01ba453ff6a88164b9eff8" compoundref="Serial_8c" startline="118" endline="125">transChar</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a0d56b2320d22882f5a8d230f140c7ea3" prot="public" static="no">
        <name>RC_INT_ENABLE</name>
        <param></param>
        <initializer><ref refid="Serial_8c_1a9607804df44b42159397aeee01326b93" kindref="member">RC_INT_CLEAR</ref>(); <ref refid="p18f4520_8h_1a756f5bf99764eb500a4a22b0693efb03" kindref="member">PIE1bits.RCIE</ref> = 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="30" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" prot="public" static="no">
        <name>TX_INT_DISABLE</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1ae7b3b4752a0a4b6c084f1599ea98e724" kindref="member">PIE1bits.TXIE</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="31" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="31" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1ab51d510f3bbabed67acc83033a617418" prot="public" static="no">
        <name>RC_INT_DISABLE</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a756f5bf99764eb500a4a22b0693efb03" kindref="member">PIE1bits.RCIE</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="32" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a876ce77f3c672c7162658151e648389e" prot="public" static="no">
        <name>CR</name>
        <initializer>0x0D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="35" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="Serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" compoundref="Serial_8c" startline="246" endline="259">readString</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" prot="public" static="no">
        <name>NL</name>
        <initializer>0x0A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="36" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" prot="public" static="no">
        <name>ESC</name>
        <initializer>0x1B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="37" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="37" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1ad58a1fbfc85c7e4790fc55e654f50221" prot="public" static="no">
        <name>TAB</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="38" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" prot="public" static="no">
        <name>BS</name>
        <initializer>0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="39" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="39" bodyend="-1"/>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Serial_8c_1a5e9b32b4516262ed0d38be2a5c900eb2" prot="public" static="yes" mutable="no">
        <type><ref refid="structcircularBuffer" kindref="compound">circularBuffer</ref></type>
        <definition>volatile circularBuffer receive_buffer</definition>
        <argsstring></argsstring>
        <name>receive_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="42" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Serial_8c_1a8afe57d3e36e53a89cc8488b2812d012" prot="public" static="yes" mutable="no">
        <type><ref refid="structcircularBuffer" kindref="compound">circularBuffer</ref></type>
        <definition>volatile circularBuffer transmit_buffer</definition>
        <argsstring></argsstring>
        <name>transmit_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="43" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>volatile char carriageReturn</definition>
        <argsstring></argsstring>
        <name>carriageReturn</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="44" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="Serial_8h_1ae2cdcda889fcfed4b6b851835bf2b538" compoundref="Serial_8c" startline="58" endline="77">configureSerial</referencedby>
        <referencedby refid="Serial_8h_1aca906fa91f67c730681400b51d426933" compoundref="Serial_8c" startline="188" endline="191">receiveCR</referencedby>
        <referencedby refid="Serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" compoundref="Serial_8c" startline="246" endline="259">readString</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      <memberdef kind="variable" id="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>volatile char escPressed</definition>
        <argsstring></argsstring>
        <name>escPressed</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="45" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="45" bodyend="-1"/>
        <referencedby refid="Serial_8h_1ae2cdcda889fcfed4b6b851835bf2b538" compoundref="Serial_8c" startline="58" endline="77">configureSerial</referencedby>
        <referencedby refid="Serial_8h_1a26eab76ecdaba2d82581899cda8d9f11" compoundref="Serial_8c" startline="204" endline="207">receiveEsc</referencedby>
        <referencedby refid="Serial_8h_1af7757e126aed6e958b291076653e24f9" compoundref="Serial_8c" startline="221" endline="229">popEsc</referencedby>
        <referencedby refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="Serial_8c" startline="289" endline="334">serialISR</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configureSerial</definition>
        <argsstring>(void)</argsstring>
        <name>configureSerial</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" kindref="member">configureSerial(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Configures the serial ready for communication</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="58" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="58" bodyend="77"/>
        <references refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772">INTCONbits</references>
        <references refid="p18f4520_8h_1a00ea63e57cd6582e6e73158695e2b088">RCONbits</references>
        <references refid="CircularBuffers_8h_1a526002aa17fac30d010d4d7315d5d81c" compoundref="CircularBuffers_8h" startline="29">init</references>
        <references refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" compoundref="Serial_8c" startline="44">carriageReturn</references>
        <references refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" compoundref="Serial_8c" startline="45">escPressed</references>
        <references refid="usart_8h_1a97cd9f0d7678894aeb678238243ef440" compoundref="usart_8h" startline="97">USART_TX_INT_ON</references>
        <references refid="usart_8h_1a977e3b97e355cdf939a03087cd07331d" compoundref="usart_8h" startline="99">USART_RX_INT_ON</references>
        <references refid="usart_8h_1a47e36a169b1732cc401cab714c380cad" compoundref="usart_8h" startline="101">USART_BRGH_HIGH</references>
        <references refid="usart_8h_1a3b38f957a6fff1ac093fa5796a84282d" compoundref="usart_8h" startline="108">USART_EIGHT_BIT</references>
        <references refid="usart_8h_1a2478822de4dabae4bdf391746ac9bb08" compoundref="usart_8h" startline="110">USART_ASYNCH_MODE</references>
        <referencedby refid="Menusystem_8h_1a94b96ccbb8f3c627c5d59189498a3c1b" compoundref="Menusystem_8c" startline="190" endline="196">initialiseMenu</referencedby>
        <referencedby refid="newmain_8c_1a1ff28a3e20f1261c410c00f62e9f9c33" compoundref="newmain_8c" startline="117" endline="129">initialization</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transmit</definition>
        <argsstring>(char *string)</argsstring>
        <name>transmit</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" kindref="member">transmit(char *string)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Begins transmitting the string over serial (interrupt driven)</para><para>Arguments: string - pointer to the beginning of the string to transmit</para><para>Returns: None</para><para>NOTE: Must be Null Terminated! Cannot receive a literal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="92" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="92" bodyend="105"/>
        <references refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="CircularBuffers_8h" startline="27">push</references>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
        <references refid="Serial_8c_1aed05378c71b5932db9fe75240763fcec" compoundref="Serial_8c" startline="29">TX_INT_ENABLE</references>
        <referencedby refid="Menusystem_8c_1a3e308d6e9b426c6463bea038c996aa35" compoundref="Menusystem_8c" startline="116" endline="124">sendROM</referencedby>
        <referencedby refid="Menusystem_8c_1a9f7902dc2a501ad1f16ec5011415bbbc" compoundref="Menusystem_8c" startline="130" endline="144">sendNewLine</referencedby>
        <referencedby refid="Menusystem_8c_1a67e96e514d9f296c79378f7fbfba457a" compoundref="Menusystem_8c" startline="149" endline="163">clearScreen</referencedby>
        <referencedby refid="Menusystem_8c_1a4bb64cc936229611900f25e483381dc7" compoundref="Menusystem_8c" startline="165" endline="175">filler</referencedby>
        <referencedby refid="Menusystem_8c_1a423b16a9c8b8570e98a887785bf2a22e" compoundref="Menusystem_8c" startline="281" endline="288">errOutOfRange</referencedby>
        <referencedby refid="Menusystem_8c_1abd46c913c8c99480b9cdd7e0dfa42c4e" compoundref="Menusystem_8c" startline="424" endline="485">setValue</referencedby>
        <referencedby refid="Menusystem_8c_1a68e5fd71e2e27b77d08445f294598629" compoundref="Menusystem_8c" startline="816" endline="822">dispTempSerialMessage</referencedby>
        <referencedby refid="Menusystem2_8c_1a4bee0e4646c0720d174aaf635246988c" compoundref="Menusystem2_8c" startline="197" endline="208">stateEntry</referencedby>
        <referencedby refid="newmain_8c_1a1ff28a3e20f1261c410c00f62e9f9c33" compoundref="newmain_8c" startline="117" endline="129">initialization</referencedby>
        <referencedby refid="newmain_8c_1a2757d71d336e927bb4e6acf8016df536" compoundref="newmain_8c" startline="131" endline="171">dispTrack</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transChar</definition>
        <argsstring>(char c)</argsstring>
        <name>transChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" kindref="member">transChar(char c)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Transmits a single character</para><para>Arguments: c - character to transmit</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="118" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="118" bodyend="125"/>
        <references refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="CircularBuffers_8h" startline="27">push</references>
        <references refid="Serial_8c_1aed05378c71b5932db9fe75240763fcec" compoundref="Serial_8c" startline="29">TX_INT_ENABLE</references>
        <referencedby refid="Menusystem_8c_1aae2d111e2cbcfe93d493729e9c9c1f2b" compoundref="Menusystem_8c" startline="701" endline="717">displayMenuSerial</referencedby>
        <referencedby refid="newmain_8c_1a2757d71d336e927bb4e6acf8016df536" compoundref="newmain_8c" startline="131" endline="171">dispTrack</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1a42f5165187634304f89709eebe7c9f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receiveEmpty</definition>
        <argsstring>(void)</argsstring>
        <name>receiveEmpty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1a42f5165187634304f89709eebe7c9f8c" kindref="member">receiveEmpty(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Indicates if the receive buffer is empty</para><para>Arguments: None</para><para>Returns: returns true if the recieve buffer is empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="138" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="138" bodyend="141"/>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
        <referencedby refid="Menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="Menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1a6e41eb5b433439d82f67def509ade010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receivePeek</definition>
        <argsstring>(void)</argsstring>
        <name>receivePeek</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1a6e41eb5b433439d82f67def509ade010" kindref="member">receivePeek(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Returns the next character in the receive buffer without removing it from the buffer</para><para>Arguments: None</para><para>Returns: The next received character </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="155" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="155" bodyend="158"/>
        <references refid="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" compoundref="CircularBuffers_8h" startline="25">peek</references>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1abb74ccb0bd81e0e4779854c93851c804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receivePop</definition>
        <argsstring>(void)</argsstring>
        <name>receivePop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1abb74ccb0bd81e0e4779854c93851c804" kindref="member">receivePop(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Pops the next received character from the received buffer</para><para>Arguments: None</para><para>Returns: The next character from the receive buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="171" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="171" bodyend="175"/>
        <references refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="CircularBuffers_8h" startline="28">pop</references>
        <referencedby refid="Menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="Menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1aca906fa91f67c730681400b51d426933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receiveCR</definition>
        <argsstring>(void)</argsstring>
        <name>receiveCR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1aca906fa91f67c730681400b51d426933" kindref="member">receiveCR(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Indicates whether a Carriage Return has been received</para><para>Arguments: None</para><para>Returns: non-zero if CR has been received, zero otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="188" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="188" bodyend="191"/>
        <references refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" compoundref="Serial_8c" startline="44">carriageReturn</references>
        <referencedby refid="Menusystem_8h_1a0c5137bf380f59ecbe803283c32f7c2c" compoundref="Menusystem_8c" startline="211" endline="215">checkForSerialInput</referencedby>
        <referencedby refid="Menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="Menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1a26eab76ecdaba2d82581899cda8d9f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receiveEsc</definition>
        <argsstring>(void)</argsstring>
        <name>receiveEsc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1a26eab76ecdaba2d82581899cda8d9f11" kindref="member">receiveEsc(void)</ref></para><para>Include:</para><para>Description: Indicates whether an Escape character has been received</para><para>Arguments: None</para><para>Returns: non-zero if the Esc has been received, zero otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="204" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="204" bodyend="207"/>
        <references refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" compoundref="Serial_8c" startline="45">escPressed</references>
        <referencedby refid="Menusystem_8h_1a0c5137bf380f59ecbe803283c32f7c2c" compoundref="Menusystem_8c" startline="211" endline="215">checkForSerialInput</referencedby>
        <referencedby refid="Menusystem_8c_1a8b63a4216144880e0f72493bb99327b9" compoundref="Menusystem_8c" startline="308" endline="318">getSerialNumericInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1af7757e126aed6e958b291076653e24f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void popEsc</definition>
        <argsstring>(void)</argsstring>
        <name>popEsc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1af7757e126aed6e958b291076653e24f9" kindref="member">popEsc(void)</ref></para><para>Include:</para><para>Description: Processes the Esc command and removes any input before the Esc command.</para><para>Arguments: None</para><para>Returns: </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="221" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="221" bodyend="229"/>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
        <references refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="CircularBuffers_8h" startline="28">pop</references>
        <references refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" compoundref="Serial_8c" startline="45">escPressed</references>
        <referencedby refid="Menusystem_8c_1a8b63a4216144880e0f72493bb99327b9" compoundref="Menusystem_8c" startline="308" endline="318">getSerialNumericInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readString</definition>
        <argsstring>(char *string)</argsstring>
        <name>readString</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" kindref="member">readString(char *string)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Writes all received data up to a carriage return into given location.</para><para>Arguments: string - Pointer to location to store received data</para><para>Returns: Received data including the carriage return</para><para>Remarks: Make sure that you reserve at least BUFFERLENGTH elements at the location pointed to by string before calling this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="246" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="246" bodyend="259"/>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
        <references refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="CircularBuffers_8h" startline="28">pop</references>
        <references refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" compoundref="Serial_8c" startline="35">CR</references>
        <references refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" compoundref="Serial_8c" startline="44">carriageReturn</references>
        <referencedby refid="Menusystem_8c_1a8b63a4216144880e0f72493bb99327b9" compoundref="Menusystem_8c" startline="308" endline="318">getSerialNumericInput</referencedby>
        <referencedby refid="Menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="Menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char transmitted</definition>
        <argsstring>(void)</argsstring>
        <name>transmitted</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" kindref="member">transmitted(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: returns non-zero if the message has been completely transmited e.g. if the transmit buffer is empty</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="273" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="273" bodyend="276"/>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
      </memberdef>
      <memberdef kind="function" id="Serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void serialISR</definition>
        <argsstring>(void)</argsstring>
        <name>serialISR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" kindref="member">serialISR(void)</ref></para><para>Include: <ref refid="Serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Acts as the interrupt service routine for the serial module</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="289" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="289" bodyend="334"/>
        <references refid="Common_8h_1aef3509d0d4bc8291df1b76f894a1e251" compoundref="Common_8h" startline="145">TX_INT</references>
        <references refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="CircularBuffers_8h" startline="23">empty</references>
        <references refid="Serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" compoundref="Serial_8c" startline="31">TX_INT_DISABLE</references>
        <references refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="CircularBuffers_8h" startline="28">pop</references>
        <references refid="Serial_8c_1ae75715981e20452ec65e09240954c901" compoundref="Serial_8c" startline="27">TX_INT_CLEAR</references>
        <references refid="Common_8h_1a62ad39277340a9f95c1464e4a4b1b5a1" compoundref="Common_8h" startline="146">RC_INT</references>
        <references refid="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" compoundref="CircularBuffers_8h" startline="25">peek</references>
        <references refid="Serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" compoundref="Serial_8c" startline="37">ESC</references>
        <references refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" compoundref="Serial_8c" startline="45">escPressed</references>
        <references refid="Serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" compoundref="Serial_8c" startline="39">BS</references>
        <references refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" compoundref="Serial_8c" startline="35">CR</references>
        <references refid="Serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" compoundref="Serial_8c" startline="36">NL</references>
        <references refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="CircularBuffers_8h" startline="27">push</references>
        <references refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" compoundref="Serial_8c" startline="44">carriageReturn</references>
        <references refid="Serial_8c_1a9607804df44b42159397aeee01326b93" compoundref="Serial_8c" startline="28">RC_INT_CLEAR</references>
        <referencedby refid="Interrupts_8c_1ac835f50b358d0d663df1b8b835f9bb87" compoundref="Interrupts_8c" startline="88" endline="107">lowISR</referencedby>
        <referencedby refid="Interrupts_8c_1ae1ef1358e10604d046f54fc0b93c514c" compoundref="Interrupts_8c" startline="122" endline="141">highISR</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Common_8h" kindref="compound">Common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="usart_8h" kindref="compound">usart.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CircularBuffers_8h" kindref="compound">CircularBuffers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//Interrupt<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="Serial_8c_1ae75715981e20452ec65e09240954c901" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_CLEAR()<sp/>PIR1bits.TXIF<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="Serial_8c_1a9607804df44b42159397aeee01326b93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_CLEAR()<sp/>PIR1bits.RCIF<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="Serial_8c_1aed05378c71b5932db9fe75240763fcec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_ENABLE()<sp/>TX_INT_CLEAR();<sp/>PIE1bits.TXIE<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="Serial_8c_1a0d56b2320d22882f5a8d230f140c7ea3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_ENABLE()<sp/>RC_INT_CLEAR();<sp/>PIE1bits.RCIE<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="Serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_DISABLE()<sp/>PIE1bits.TXIE<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="Serial_8c_1ab51d510f3bbabed67acc83033a617418" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_DISABLE()<sp/>PIE1bits.RCIE<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//ASCII<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR<sp/>0x0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="Serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NL<sp/>0x0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="Serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESC<sp/>0x1B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="Serial_8c_1ad58a1fbfc85c7e4790fc55e654f50221" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAB<sp/>0x09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="Serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BS<sp/>0x07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//Local<sp/>Function<sp/>Prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="Serial_8c_1a5e9b32b4516262ed0d38be2a5c900eb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structcircularBuffer" kindref="compound">circularBuffer</ref><sp/><ref refid="Serial_8c_1a5e9b32b4516262ed0d38be2a5c900eb2" kindref="member">receive_buffer</ref>;</highlight></codeline>
<codeline lineno="43" refid="Serial_8c_1a8afe57d3e36e53a89cc8488b2812d012" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structcircularBuffer" kindref="compound">circularBuffer</ref><sp/><ref refid="Serial_8c_1a8afe57d3e36e53a89cc8488b2812d012" kindref="member">transmit_buffer</ref>;</highlight></codeline>
<codeline lineno="44" refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" kindref="member">carriageReturn</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45" refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" kindref="member">escPressed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="Serial_8h_1ae2cdcda889fcfed4b6b851835bf2b538" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" kindref="member">configureSerial</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772" kindref="member">INTCONbits</ref>.GIEH<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772" kindref="member">INTCONbits</ref>.GIEL<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1a00ea63e57cd6582e6e73158695e2b088" kindref="member">RCONbits</ref>.IPEN<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Initialise<sp/>the<sp/>serial<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1a526002aa17fac30d010d4d7315d5d81c" kindref="member">init</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1a526002aa17fac30d010d4d7315d5d81c" kindref="member">init</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" kindref="member">carriageReturn</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" kindref="member">escPressed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>the<sp/>USART<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MNML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>OpenUSART(<ref refid="usart_8h_1a97cd9f0d7678894aeb678238243ef440" kindref="member">USART_TX_INT_ON</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a977e3b97e355cdf939a03087cd07331d" kindref="member">USART_RX_INT_ON</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a47e36a169b1732cc401cab714c380cad" kindref="member">USART_BRGH_HIGH</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a3b38f957a6fff1ac093fa5796a84282d" kindref="member">USART_EIGHT_BIT</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a2478822de4dabae4bdf391746ac9bb08" kindref="member">USART_ASYNCH_MODE</ref>,<sp/>64);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>OpenUSART(<ref refid="usart_8h_1a97cd9f0d7678894aeb678238243ef440" kindref="member">USART_TX_INT_ON</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a977e3b97e355cdf939a03087cd07331d" kindref="member">USART_RX_INT_ON</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a47e36a169b1732cc401cab714c380cad" kindref="member">USART_BRGH_HIGH</ref><sp/>&amp;<sp/><ref refid="usart_8h_1a3b38f957a6fff1ac093fa5796a84282d" kindref="member">USART_EIGHT_BIT</ref><sp/>&amp;<sp/>USART_ASYNCH_MODE,<sp/>25);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="Serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" kindref="member">transmit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Push<sp/>the<sp/>string<sp/>onto<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*string;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>transmit_buffer);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>TX<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1aed05378c71b5932db9fe75240763fcec" kindref="member">TX_INT_ENABLE</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="Serial_8h_1aabfd643e8a01ba453ff6a88164b9eff8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" kindref="member">transChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Push<sp/>character<sp/>onto<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(c,<sp/>transmit_buffer);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>TX<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1aed05378c71b5932db9fe75240763fcec" kindref="member">TX_INT_ENABLE</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="Serial_8h_1a42f5165187634304f89709eebe7c9f8c" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a42f5165187634304f89709eebe7c9f8c" kindref="member">receiveEmpty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="Serial_8h_1a6e41eb5b433439d82f67def509ade010" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a6e41eb5b433439d82f67def509ade010" kindref="member">receivePeek</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" kindref="member">peek</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="Serial_8h_1abb74ccb0bd81e0e4779854c93851c804" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1abb74ccb0bd81e0e4779854c93851c804" kindref="member">receivePop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="Serial_8h_1aca906fa91f67c730681400b51d426933" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1aca906fa91f67c730681400b51d426933" kindref="member">receiveCR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" kindref="member">carriageReturn</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="Serial_8h_1a26eab76ecdaba2d82581899cda8d9f11" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a26eab76ecdaba2d82581899cda8d9f11" kindref="member">receiveEsc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" kindref="member">escPressed</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="Serial_8h_1af7757e126aed6e958b291076653e24f9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1af7757e126aed6e958b291076653e24f9" kindref="member">popEsc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" kindref="member">escPressed</ref>--;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="Serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" kindref="member">readString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>e;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref><sp/>&amp;&amp;<sp/>!e)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++)<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" kindref="member">carriageReturn</ref>--;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="Serial_8h_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" kindref="member">transmitted</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="Serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" kindref="member">serialISR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>last;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>which<sp/>serial<sp/>interrupt<sp/>instance<sp/>was<sp/>thrown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Common_8h_1aef3509d0d4bc8291df1b76f894a1e251" kindref="member">TX_INT</ref>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="CircularBuffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" kindref="member">TX_INT_DISABLE</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteUSART(data);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>interrupt<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1ae75715981e20452ec65e09240954c901" kindref="member">TX_INT_CLEAR</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Common_8h_1a62ad39277340a9f95c1464e4a4b1b5a1" kindref="member">RC_INT</ref>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>ReadUSART();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="CircularBuffers_8h_1ab6770f937bcc348970693cd84824bf9f" kindref="member">peek</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="Serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" kindref="member">ESC</ref>)<sp/><ref refid="Serial_8c_1a625ea157d146adb4c20b402fe7de7d0d" kindref="member">escPressed</ref>++;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>the<sp/>user<sp/>to<sp/>remove/change<sp/>transmitted<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="Serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" kindref="member">BS</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="Serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" kindref="member">ESC</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="Serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" kindref="member">NL</ref><sp/>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//push<sp/>the<sp/>received<sp/>data<sp/>onto<sp/>the<sp/>received<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CircularBuffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(data,<sp/>receive_buffer);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="Serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>)<sp/><ref refid="Serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" kindref="member">carriageReturn</ref>++;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>interrupt<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Serial_8c_1a9607804df44b42159397aeee01326b93" kindref="member">RC_INT_CLEAR</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c"/>
  </compounddef>
</doxygen>
