<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serial_8c" kind="file">
    <compoundname>Serial.c</compoundname>
    <includes refid="_common_8h" local="yes">Common.h</includes>
    <includes local="no">usart.h</includes>
    <includes refid="_circular_buffers_8h" local="yes">CircularBuffers.h</includes>
    <incdepgraph>
      <node id="170">
        <label>stdlib.h</label>
      </node>
      <node id="174">
        <label>adc.h</label>
      </node>
      <node id="168">
        <label>Common.h</label>
        <link refid="_common_8h"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>Serial.c</label>
        <link refid="Serial.c"/>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>timers.h</label>
      </node>
      <node id="177">
        <label>compare.h</label>
      </node>
      <node id="175">
        <label>capture.h</label>
      </node>
      <node id="171">
        <label>math.h</label>
      </node>
      <node id="172">
        <label>p18f4520.h</label>
        <link refid="p18f4520_8h"/>
      </node>
      <node id="176">
        <label>usart.h</label>
      </node>
      <node id="169">
        <label>stdio.h</label>
      </node>
      <node id="178">
        <label>CircularBuffers.h</label>
        <link refid="_circular_buffers_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serial_8c_1aad6c9657ae358a299230e30c92a62d7f" prot="public" static="no">
        <name>thing</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="12" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1ae75715981e20452ec65e09240954c901" prot="public" static="no">
        <name>TX_INT_CLEAR</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a045c6555e7e82fcf68e608d4404fb9ed" kindref="member">PIR1bits.TXIF</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="15" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="15" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a9607804df44b42159397aeee01326b93" prot="public" static="no">
        <name>RC_INT_CLEAR</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a8ff1127552738fc483a7e1887045e8d2" kindref="member">PIR1bits.RCIF</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="16" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="16" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1aed05378c71b5932db9fe75240763fcec" prot="public" static="no">
        <name>TX_INT_ENABLE</name>
        <param></param>
        <initializer><ref refid="_serial_8c_1ae75715981e20452ec65e09240954c901" kindref="member">TX_INT_CLEAR</ref>(); <ref refid="p18f4520_8h_1ae7b3b4752a0a4b6c084f1599ea98e724" kindref="member">PIE1bits.TXIE</ref> = 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="17" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="17" bodyend="-1"/>
        <referencedby refid="_serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" compoundref="_serial_8c" startline="75" endline="88">transmit</referencedby>
        <referencedby refid="_serial_8h_1aabfd643e8a01ba453ff6a88164b9eff8" compoundref="_serial_8c" startline="101" endline="108">transChar</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a0d56b2320d22882f5a8d230f140c7ea3" prot="public" static="no">
        <name>RC_INT_ENABLE</name>
        <param></param>
        <initializer><ref refid="_serial_8c_1a9607804df44b42159397aeee01326b93" kindref="member">RC_INT_CLEAR</ref>(); <ref refid="p18f4520_8h_1a756f5bf99764eb500a4a22b0693efb03" kindref="member">PIE1bits.RCIE</ref> = 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="18" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" prot="public" static="no">
        <name>TX_INT_DISABLE</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1ae7b3b4752a0a4b6c084f1599ea98e724" kindref="member">PIE1bits.TXIE</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="19" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="19" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1ab51d510f3bbabed67acc83033a617418" prot="public" static="no">
        <name>RC_INT_DISABLE</name>
        <param></param>
        <initializer><ref refid="p18f4520_8h_1a756f5bf99764eb500a4a22b0693efb03" kindref="member">PIE1bits.RCIE</ref> = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="20" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a876ce77f3c672c7162658151e648389e" prot="public" static="no">
        <name>CR</name>
        <initializer>0x0D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="23" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="23" bodyend="-1"/>
        <referencedby refid="_serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" compoundref="_serial_8c" startline="191" endline="203">readString</referencedby>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" prot="public" static="no">
        <name>NL</name>
        <initializer>0x0A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="24" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="24" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" prot="public" static="no">
        <name>ESC</name>
        <initializer>0x1B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="25" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="25" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1ad58a1fbfc85c7e4790fc55e654f50221" prot="public" static="no">
        <name>TAB</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="26" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" prot="public" static="no">
        <name>BS</name>
        <initializer>0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="27" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="27" bodyend="-1"/>
        <referencedby refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" compoundref="_serial_8c" startline="233" endline="274">serialISR</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_serial_8c_1a5e9b32b4516262ed0d38be2a5c900eb2" prot="public" static="yes" mutable="no">
        <type><ref refid="structcircular_buffer" kindref="compound">circularBuffer</ref></type>
        <definition>volatile circularBuffer receive_buffer</definition>
        <argsstring></argsstring>
        <name>receive_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="29" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_serial_8c_1a8afe57d3e36e53a89cc8488b2812d012" prot="public" static="yes" mutable="no">
        <type><ref refid="structcircular_buffer" kindref="compound">circularBuffer</ref></type>
        <definition>volatile circularBuffer transmit_buffer</definition>
        <argsstring></argsstring>
        <name>transmit_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="30" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_serial_8c_1a8cff2d32a612db164397b2a3b4ce2b5e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>volatile char carriageReturn</definition>
        <argsstring></argsstring>
        <name>carriageReturn</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="31" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configureSerial</definition>
        <argsstring>(void)</argsstring>
        <name>configureSerial</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" kindref="member">configureSerial(void)</ref></para><para>Include:</para><para>Description: Configures the serial ready for communication</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="44" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="44" bodyend="62"/>
        <references refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772">INTCONbits</references>
        <references refid="p18f4520_8h_1a00ea63e57cd6582e6e73158695e2b088">RCONbits</references>
        <references refid="_circular_buffers_8h_1a526002aa17fac30d010d4d7315d5d81c" compoundref="_circular_buffers_8h" startline="18">init</references>
        <referencedby refid="_menusystem_8h_1a94b96ccbb8f3c627c5d59189498a3c1b" compoundref="_menusystem_8c" startline="135" endline="140">initialiseMenu</referencedby>
        <referencedby refid="_menusystem_8c_1afa234d458057237e03e355d30fafac84" compoundref="_menusystem_8c" startline="182" endline="215">menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transmit</definition>
        <argsstring>(char *string)</argsstring>
        <name>transmit</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" kindref="member">transmit(char *string)</ref></para><para>Include:</para><para>Description: Begins transmitting the string over serial (interrupt driven)</para><para>Arguments: string - pointer to the beginning of the string to transmit</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="75" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="75" bodyend="88"/>
        <references refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="_circular_buffers_8h" startline="16">push</references>
        <references refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="_circular_buffers_8h" startline="12">empty</references>
        <references refid="_serial_8c_1aed05378c71b5932db9fe75240763fcec" compoundref="_serial_8c" startline="17">TX_INT_ENABLE</references>
        <referencedby refid="_menusystem_8c_1aec49123d1c8f1231607dc9159ae138a4" compoundref="_menusystem_8c" startline="43" endline="48">clearscreen</referencedby>
        <referencedby refid="_menusystem_8c_1a4bb64cc936229611900f25e483381dc7" compoundref="_menusystem_8c" startline="50" endline="55">filler</referencedby>
        <referencedby refid="_menusystem_8c_1ae3777c5b2ceab74d5d90b444da874d14" compoundref="_menusystem_8c" startline="57" endline="63">disptoptions</referencedby>
        <referencedby refid="_menusystem_8c_1a4437457cad71a9015dbfbac75f9b2b99" compoundref="_menusystem_8c" startline="65" endline="81">topmenudisp</referencedby>
        <referencedby refid="_menusystem_8c_1a4ec0accaddbc5d42e2c1cf77d22693c3" compoundref="_menusystem_8c" startline="83" endline="120">topmenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transChar</definition>
        <argsstring>(char c)</argsstring>
        <name>transChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" kindref="member">transChar(char c)</ref></para><para>Include:</para><para>Description: Transmits a single character</para><para>Arguments: c - character to transmit</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="101" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="101" bodyend="108"/>
        <references refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="_circular_buffers_8h" startline="16">push</references>
        <references refid="_serial_8c_1aed05378c71b5932db9fe75240763fcec" compoundref="_serial_8c" startline="17">TX_INT_ENABLE</references>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1a42f5165187634304f89709eebe7c9f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receiveEmpty</definition>
        <argsstring>(void)</argsstring>
        <name>receiveEmpty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1a42f5165187634304f89709eebe7c9f8c" kindref="member">receiveEmpty(void)</ref></para><para>Include:</para><para>Description: Indicates if the receive buffer is empty</para><para>Arguments: None</para><para>Returns: returns true if the recieve buffer is empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="121" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="121" bodyend="124"/>
        <references refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="_circular_buffers_8h" startline="12">empty</references>
        <referencedby refid="_menusystem_8c_1a4ec0accaddbc5d42e2c1cf77d22693c3" compoundref="_menusystem_8c" startline="83" endline="120">topmenu</referencedby>
        <referencedby refid="_menusystem_8h_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="_menusystem_8c" startline="158" endline="162">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1a6e41eb5b433439d82f67def509ade010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receivePeek</definition>
        <argsstring>(void)</argsstring>
        <name>receivePeek</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1a6e41eb5b433439d82f67def509ade010" kindref="member">receivePeek(void)</ref></para><para>Include:</para><para>Description: Returns the next character in the receive buffer without removing it from the buffer</para><para>Arguments: None</para><para>Returns: The next received character </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="138" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="138" bodyend="141"/>
        <references refid="_circular_buffers_8h_1ab6770f937bcc348970693cd84824bf9f" compoundref="_circular_buffers_8h" startline="14">peek</references>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1abb74ccb0bd81e0e4779854c93851c804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receivePop</definition>
        <argsstring>(void)</argsstring>
        <name>receivePop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1abb74ccb0bd81e0e4779854c93851c804" kindref="member">receivePop(void)</ref></para><para>Include:</para><para>Description: Pops the next received character from the received buffer</para><para>Arguments: None</para><para>Returns: The next character from the receive buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="154" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="154" bodyend="158"/>
        <references refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="_circular_buffers_8h" startline="17">pop</references>
        <referencedby refid="_menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="_menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1aca906fa91f67c730681400b51d426933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char receiveCR</definition>
        <argsstring>(void)</argsstring>
        <name>receiveCR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1aca906fa91f67c730681400b51d426933" kindref="member">receiveCR(void)</ref></para><para>Include:</para><para>Description: Indicates whether a Carriage Return has been received</para><para>Arguments: None</para><para>Returns: non-zero if CR has been received, zero otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="171" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="171" bodyend="174"/>
        <referencedby refid="_menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="_menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readString</definition>
        <argsstring>(char *string)</argsstring>
        <name>readString</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" kindref="member">readString(char *string)</ref></para><para>Include: <ref refid="_serial_8h" kindref="compound">Serial.h</ref></para><para>Description: Writes all received data up to a carriage return into given location.</para><para>Arguments: string - Pointer to location to store received data</para><para>Returns: Received data up to a carriage return</para><para>Remarks: Make sure that you reserve at least BUFFERLENGTH elements at the location pointed to by string before calling this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="191" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="191" bodyend="203"/>
        <references refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="_circular_buffers_8h" startline="12">empty</references>
        <references refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="_circular_buffers_8h" startline="17">pop</references>
        <references refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" compoundref="_serial_8c" startline="23">CR</references>
        <referencedby refid="_menusystem_8c_1a4ec0accaddbc5d42e2c1cf77d22693c3" compoundref="_menusystem_8c" startline="83" endline="120">topmenu</referencedby>
        <referencedby refid="_menusystem2_8c_1afc5a5c12a076ae6c7424df4f4124a521" compoundref="_menusystem2_8c" startline="87" endline="111">serviceMenu</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char transmitted</definition>
        <argsstring>(void)</argsstring>
        <name>transmitted</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" kindref="member">transmitted(void)</ref></para><para>Include: <ref refid="_serial_8h" kindref="compound">Serial.h</ref></para><para>Description: returns non-zero if the message has been completely transmited e.g. if the transmit buffer is empty</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="217" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="217" bodyend="220"/>
        <references refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="_circular_buffers_8h" startline="12">empty</references>
      </memberdef>
      <memberdef kind="function" id="_serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void serialISR</definition>
        <argsstring>(void)</argsstring>
        <name>serialISR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="_serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" kindref="member">serialISR(void)</ref></para><para>Include:</para><para>Description: Acts as the interrupt service routine for the serial module</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" line="233" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c" bodystart="233" bodyend="274"/>
        <references refid="_common_8h_1aef3509d0d4bc8291df1b76f894a1e251" compoundref="_common_8h" startline="91">TX_INT</references>
        <references refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" compoundref="_circular_buffers_8h" startline="12">empty</references>
        <references refid="_serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" compoundref="_serial_8c" startline="19">TX_INT_DISABLE</references>
        <references refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" compoundref="_circular_buffers_8h" startline="17">pop</references>
        <references refid="_serial_8c_1ae75715981e20452ec65e09240954c901" compoundref="_serial_8c" startline="15">TX_INT_CLEAR</references>
        <references refid="_common_8h_1a62ad39277340a9f95c1464e4a4b1b5a1" compoundref="_common_8h" startline="92">RC_INT</references>
        <references refid="_circular_buffers_8h_1ab6770f937bcc348970693cd84824bf9f" compoundref="_circular_buffers_8h" startline="14">peek</references>
        <references refid="_serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" compoundref="_serial_8c" startline="27">BS</references>
        <references refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" compoundref="_serial_8c" startline="23">CR</references>
        <references refid="_serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" compoundref="_serial_8c" startline="25">ESC</references>
        <references refid="_serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" compoundref="_serial_8c" startline="24">NL</references>
        <references refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" compoundref="_circular_buffers_8h" startline="16">push</references>
        <references refid="_serial_8c_1a9607804df44b42159397aeee01326b93" compoundref="_serial_8c" startline="16">RC_INT_CLEAR</references>
        <referencedby refid="_interrupts_8c_1ac835f50b358d0d663df1b8b835f9bb87" compoundref="_interrupts_8c" startline="79" endline="98">lowISR</referencedby>
        <referencedby refid="_interrupts_8c_1ae1ef1358e10604d046f54fc0b93c514c" compoundref="_interrupts_8c" startline="113" endline="132">highISR</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>newmain.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Grant</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Contains<sp/>the<sp/>functionality<sp/>for<sp/>the<sp/>Serial<sp/>module</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created<sp/>on<sp/>7<sp/>September<sp/>2014,<sp/>4:12<sp/>PM</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_common_8h" kindref="compound">Common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;usart.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_circular_buffers_8h" kindref="compound">CircularBuffers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//Interrupt<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="_serial_8c_1ae75715981e20452ec65e09240954c901" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_CLEAR()<sp/>PIR1bits.TXIF<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="_serial_8c_1a9607804df44b42159397aeee01326b93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_CLEAR()<sp/>PIR1bits.RCIF<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_serial_8c_1aed05378c71b5932db9fe75240763fcec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_ENABLE()<sp/>TX_INT_CLEAR();<sp/>PIE1bits.TXIE<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_serial_8c_1a0d56b2320d22882f5a8d230f140c7ea3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_ENABLE()<sp/>RC_INT_CLEAR();<sp/>PIE1bits.RCIE<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="_serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INT_DISABLE()<sp/>PIE1bits.TXIE<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="_serial_8c_1ab51d510f3bbabed67acc83033a617418" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RC_INT_DISABLE()<sp/>PIE1bits.RCIE<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//ASCII<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR<sp/>0x0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="_serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NL<sp/>0x0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="_serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESC<sp/>0x1B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_serial_8c_1ad58a1fbfc85c7e4790fc55e654f50221" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAB<sp/>0x09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="_serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BS<sp/>0x07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structcircular_buffer" kindref="compound">circularBuffer</ref><sp/>receive_buffer;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structcircular_buffer" kindref="compound">circularBuffer</ref><sp/>transmit_buffer;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>carriageReturn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_serial_8h_1ae2cdcda889fcfed4b6b851835bf2b538" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1ae2cdcda889fcfed4b6b851835bf2b538" kindref="member">configureSerial</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772" kindref="member">INTCONbits</ref>.GIEH<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1af5bf03e76136efa0057405aa11f11772" kindref="member">INTCONbits</ref>.GIEL<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p18f4520_8h_1a00ea63e57cd6582e6e73158695e2b088" kindref="member">RCONbits</ref>.IPEN<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Initialise<sp/>the<sp/>serial<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1a526002aa17fac30d010d4d7315d5d81c" kindref="member">init</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1a526002aa17fac30d010d4d7315d5d81c" kindref="member">init</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>carriageReturn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>the<sp/>USART<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MNML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>OpenUSART(USART_TX_INT_ON<sp/>&amp;<sp/>USART_RX_INT_ON<sp/>&amp;<sp/>USART_BRGH_HIGH<sp/>&amp;<sp/>USART_EIGHT_BIT<sp/>&amp;<sp/>USART_ASYNCH_MODE,<sp/>64);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>OpenUSART(USART_TX_INT_ON<sp/>&amp;<sp/>USART_RX_INT_ON<sp/>&amp;<sp/>USART_BRGH_HIGH<sp/>&amp;<sp/>USART_EIGHT_BIT<sp/>&amp;<sp/>USART_ASYNCH_MODE,<sp/>25);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="_serial_8h_1aab23d23c5b64a3bb7e5913afb4a3ed85" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1aab23d23c5b64a3bb7e5913afb4a3ed85" kindref="member">transmit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Push<sp/>the<sp/>string<sp/>onto<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*string;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>transmit_buffer);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>TX<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serial_8c_1aed05378c71b5932db9fe75240763fcec" kindref="member">TX_INT_ENABLE</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="_serial_8h_1aabfd643e8a01ba453ff6a88164b9eff8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1aabfd643e8a01ba453ff6a88164b9eff8" kindref="member">transChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Push<sp/>character<sp/>onto<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(c,<sp/>transmit_buffer);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>TX<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serial_8c_1aed05378c71b5932db9fe75240763fcec" kindref="member">TX_INT_ENABLE</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="_serial_8h_1a42f5165187634304f89709eebe7c9f8c" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1a42f5165187634304f89709eebe7c9f8c" kindref="member">receiveEmpty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="_serial_8h_1a6e41eb5b433439d82f67def509ade010" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1a6e41eb5b433439d82f67def509ade010" kindref="member">receivePeek</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_circular_buffers_8h_1ab6770f937bcc348970693cd84824bf9f" kindref="member">peek</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_serial_8h_1abb74ccb0bd81e0e4779854c93851c804" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1abb74ccb0bd81e0e4779854c93851c804" kindref="member">receivePop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="_serial_8h_1aca906fa91f67c730681400b51d426933" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1aca906fa91f67c730681400b51d426933" kindref="member">receiveCR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>carriageReturn;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="_serial_8h_1ad5d0bd1e5c7b8380e3567f8dc474b6db" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1ad5d0bd1e5c7b8380e3567f8dc474b6db" kindref="member">readString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>e;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref><sp/>&amp;&amp;<sp/>!e)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++)<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>carriageReturn--;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="_serial_8h_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1a96a7d5e668a1b77fd5bbd343c7f1cbfc" kindref="member">transmitted</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="_serial_8h_1a6cf71700cdaeb2afeaf619777af19bfc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serial_8c_1a6cf71700cdaeb2afeaf619777af19bfc" kindref="member">serialISR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>last;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>which<sp/>serial<sp/>interrupt<sp/>instance<sp/>was<sp/>thrown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_common_8h_1aef3509d0d4bc8291df1b76f894a1e251" kindref="member">TX_INT</ref>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>transmit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_circular_buffers_8h_1aeabcb3d395f687162520f9f72c926edf" kindref="member">empty</ref>(transmit_buffer))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serial_8c_1af4550af5f0b07a9dae44eaca1e30d809" kindref="member">TX_INT_DISABLE</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(transmit_buffer);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteUSART(data);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>interrupt<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serial_8c_1ae75715981e20452ec65e09240954c901" kindref="member">TX_INT_CLEAR</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_common_8h_1a62ad39277340a9f95c1464e4a4b1b5a1" kindref="member">RC_INT</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>ReadUSART();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="_circular_buffers_8h_1ab6770f937bcc348970693cd84824bf9f" kindref="member">peek</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>the<sp/>user<sp/>to<sp/>remove/change<sp/>transmitted<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="_serial_8c_1a580a88f98668df1ac5e1683cae31c0b3" kindref="member">BS</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="_serial_8c_1a4af1b6159e447ba72652bb7fcdfa726e" kindref="member">ESC</ref><sp/>&amp;&amp;<sp/>last<sp/>!=<sp/><ref refid="_serial_8c_1a4fc34b120ed3bd1120c1eb36abbcd6af" kindref="member">NL</ref><sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1aea34ae72df51f27dbb0562f5d9a23de0" kindref="member">pop</ref>(receive_buffer);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//push<sp/>the<sp/>received<sp/>data<sp/>onto<sp/>the<sp/>received<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_circular_buffers_8h_1aba30707c86c50590824a646a3ef26fbb" kindref="member">push</ref>(data,<sp/>receive_buffer);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="_serial_8c_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>)<sp/>carriageReturn++;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>interrupt<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serial_8c_1a9607804df44b42159397aeee01326b93" kindref="member">RC_INT_CLEAR</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Serial.c"/>
  </compounddef>
</doxygen>
