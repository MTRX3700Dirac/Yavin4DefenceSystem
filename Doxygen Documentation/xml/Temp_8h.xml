<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="Temp_8h" kind="file">
    <compoundname>Temp.h</compoundname>
    <includedby refid="Interrupts_8c" local="yes">Yavin4DefenceSystem/Code/Interrupts.c</includedby>
    <includedby refid="Menusystem_8c" local="yes">Yavin4DefenceSystem/Code/Menusystem.c</includedby>
    <includedby refid="Range_8c" local="yes">Yavin4DefenceSystem/Code/Range.c</includedby>
    <invincdepgraph>
      <node id="596">
        <label>Yavin4DefenceSystem/Code/Menusystem.c</label>
        <link refid="Menusystem_8c"/>
      </node>
      <node id="595">
        <label>Yavin4DefenceSystem/Code/Interrupts.c</label>
        <link refid="Interrupts_8c"/>
      </node>
      <node id="597">
        <label>Yavin4DefenceSystem/Code/Range.c</label>
        <link refid="Range_8c"/>
      </node>
      <node id="594">
        <label>Yavin4DefenceSystem/Code/Temp.h</label>
        <link refid="Temp.h"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Temp_8h_1a8af7e8495d73677176799f2873de21ce" prot="public" static="no">
        <name>TEMP_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="30" column="9" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Temp_8h_1af6785da0c9b3c637b09522617d3f9dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configureTemp</definition>
        <argsstring>(void)</argsstring>
        <name>configureTemp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 File: <ref refid="Temp_8h" kindref="compound">Temp.h</ref> Author: Grant</para><para>Description: Contains all the functionality and variables for the temp module. All unnecessary functions and variables should be shielded from the external program, and interfaced with accessor and mutator functions</para><para>Contains: -Configure function -Read temperature functions -Get (last) temperature (read) function -Calibrate Temperature function</para><para>Created on 17 September 2014, 2:16 PM</para><para><hruler/>
 Function: <ref refid="Temp_8c_1af6785da0c9b3c637b09522617d3f9dba" kindref="member">configureTemp(void)</ref></para><para>Include: Temp</para><para>Description: Configures the temperature module for use</para><para>Arguments: None</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="23" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="37" bodyend="40"/>
        <references refid="Range_8c_1ac7337ef2da4c9ab03257562ec33bbb8a" compoundref="Range_8c" startline="79" endline="90">configureAD</references>
      </memberdef>
      <memberdef kind="function" id="Temp_8h_1a5b64a66aae4a5a3d92a1711956fb4eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char rawTemp</definition>
        <argsstring>(void)</argsstring>
        <name>rawTemp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Temp_8c_1a5b64a66aae4a5a3d92a1711956fb4eb8" kindref="member">rawTemp(void)</ref></para><para>Include: <ref refid="Temp_8h" kindref="compound">Temp.h</ref></para><para>Description: Returns the raw (uncalibrated temperature)</para><para>Arguments: None</para><para>Returns: Temp (in deg celsius) as an unsigned char </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="24" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="118" bodyend="121"/>
        <references refid="Common_8h_1a4d6bb91285c504f7a5a882961cf405a9" compoundref="Common_8h" startline="123">DIV_2</references>
        <references refid="Temp_8c_1a1dee09c1d88a7b834c7b3932caebcd09" compoundref="Temp_8c" startline="24">lastTempx2</references>
      </memberdef>
      <memberdef kind="function" id="Temp_8h_1afd08db2b1a6d6af19e39f10dc453332c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char readTemp</definition>
        <argsstring>(void)</argsstring>
        <name>readTemp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Temp_8c_1afd08db2b1a6d6af19e39f10dc453332c" kindref="member">readTemp(void)</ref></para><para>Include: <ref refid="Temp_8h" kindref="compound">Temp.h</ref></para><para>Description: Reads the temperature from the TEMP sensor</para><para>Arguments: None</para><para>Returns: Temp (in deg celsius) as an unsigned char </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="25" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="96" bodyend="105"/>
        <references refid="Temp_8c_1a4946ccbc1990e831667bffded1147c4f" compoundref="Temp_8c" startline="55" endline="83">readTempx2</references>
        <references refid="Common_8h_1a4d6bb91285c504f7a5a882961cf405a9" compoundref="Common_8h" startline="123">DIV_2</references>
        <referencedby refid="Menusystem_8c_1a68e5fd71e2e27b77d08445f294598629" compoundref="Menusystem_8c" startline="816" endline="822">dispTempSerialMessage</referencedby>
        <referencedby refid="Range_8h_1a07a4c592815b5e6ae178f93a7764ceb2" compoundref="Range_8c" startline="103" endline="137">configureRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="Temp_8h_1a4946ccbc1990e831667bffded1147c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char readTempx2</definition>
        <argsstring>(void)</argsstring>
        <name>readTempx2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: <ref refid="Temp_8c_1a4946ccbc1990e831667bffded1147c4f" kindref="member">readTempx2(void)</ref></para><para>Include: <ref refid="Temp_8h" kindref="compound">Temp.h</ref></para><para>Description: Reads the temperature from the Temp sensor</para><para>Arguments: None</para><para>Returns: temp x 2 (in deg celsius) as an unsigned char</para><para><xrefsect id="todo_1_todo000006"><xreftitle>Todo</xreftitle><xrefdescription><para>Test and debug this function </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="26" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="55" bodyend="83"/>
        <references refid="Common_8h_1a135151cc09e1094dbb0163c3d696e630" compoundref="Common_8h" startline="141">ADC_TEMP_READ</references>
        <references refid="p18f4520_8h_1a073ffe676f8a0b295c57ff165b0951ef">ADCON0bits</references>
        <references refid="p18f4520_8h_1a8919ac22cb49783b559b4cc044d51463">ADRESH</references>
        <references refid="p18f4520_8h_1afc0f7ea2748e1505da0641e891691b93">ADRESL</references>
        <references refid="Temp_8c_1a1dee09c1d88a7b834c7b3932caebcd09" compoundref="Temp_8c" startline="24">lastTempx2</references>
        <references refid="Temp_8c_1afc2cbd0c08b512ee436d03063c3c94d5" compoundref="Temp_8c" startline="23">calibration_offset</references>
        <referencedby refid="Temp_8h_1afd08db2b1a6d6af19e39f10dc453332c" compoundref="Temp_8c" startline="96" endline="105">readTemp</referencedby>
      </memberdef>
      <memberdef kind="function" id="Temp_8h_1aa416413a05e38b982abc19a7c9ea4c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calibrateTemp</definition>
        <argsstring>(unsigned char reference)</argsstring>
        <name>calibrateTemp</name>
        <param>
          <type>unsigned char</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: calibrationTemp(unsigned char reference)</para><para>Include: <ref refid="Temp_8h" kindref="compound">Temp.h</ref></para><para>Description: calibrates the temperature sensor by updating the calibration offset variable</para><para>Arguments: reference - Reference temperature in deg C</para><para>Returns: None</para><para>Note: This function does not perform a temperature read, but uses the last value. This is because the readTemp function automatically calibrate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="27" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="138" bodyend="141"/>
        <references refid="Temp_8c_1afc2cbd0c08b512ee436d03063c3c94d5" compoundref="Temp_8c" startline="23">calibration_offset</references>
        <references refid="Common_8h_1a4d6bb91285c504f7a5a882961cf405a9" compoundref="Common_8h" startline="123">DIV_2</references>
        <references refid="Temp_8c_1a1dee09c1d88a7b834c7b3932caebcd09" compoundref="Temp_8c" startline="24">lastTempx2</references>
      </memberdef>
      <memberdef kind="function" id="Temp_8h_1a31747860f4fe18bee4fc23c0d33b17d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char getTemp</definition>
        <argsstring>(void)</argsstring>
        <name>getTemp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Function: calibrationTemp(unsigned char reference)</para><para>Include: <ref refid="Temp_8h" kindref="compound">Temp.h</ref></para><para>Description: calibrates the temperature sensor by updating the calibration offset variable</para><para>Arguments: reference - Reference temperature in deg C</para><para>Returns: None </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h" line="28" column="1" bodyfile="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.c" bodystart="155" bodyend="158"/>
        <references refid="Common_8h_1a4d6bb91285c504f7a5a882961cf405a9" compoundref="Common_8h" startline="123">DIV_2</references>
        <references refid="Temp_8c_1a1dee09c1d88a7b834c7b3932caebcd09" compoundref="Temp_8c" startline="24">lastTempx2</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="comment">//Ensure<sp/>that<sp/>there<sp/>is<sp/>only<sp/>1<sp/>inclusion<sp/>of<sp/>this<sp/>file<sp/>in<sp/>the<sp/>preprocessor<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TEMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//External<sp/>public<sp/>access<sp/>function<sp/>prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1af6785da0c9b3c637b09522617d3f9dba" kindref="member">configureTemp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1a5b64a66aae4a5a3d92a1711956fb4eb8" kindref="member">rawTemp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1afd08db2b1a6d6af19e39f10dc453332c" kindref="member">readTemp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1a4946ccbc1990e831667bffded1147c4f" kindref="member">readTempx2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1aa416413a05e38b982abc19a7c9ea4c3c" kindref="member">calibrateTemp</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reference);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="Temp_8h_1a31747860f4fe18bee4fc23c0d33b17d7" kindref="member">getTemp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="Temp_8h_1a8af7e8495d73677176799f2873de21ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEMP_H</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Grant/Documents/GitHub/Yavin4DefenceSystem/Code/Temp.h"/>
  </compounddef>
</doxygen>
